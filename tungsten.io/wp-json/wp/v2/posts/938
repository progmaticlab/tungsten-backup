{"id":938,"date":"2013-12-10T22:14:06","date_gmt":"2013-12-10T22:14:06","guid":{"rendered":"http:\/\/opencontrail.org\/?p=938"},"modified":"2013-12-10T22:14:06","modified_gmt":"2013-12-10T22:14:06","slug":"debugging-and-system-visibility-in-a-sdn-environment","status":"publish","type":"post","link":"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/","title":{"rendered":"Debugging and System Visibility in a SDN Environment"},"content":{"rendered":"<p style=\"text-align: justify;\">The benefits of SDN, and the advantages of cloud computing have been well documented.\u00a0 However, when moving to this new distributed environment, there better be a way to have clear visibility and understanding of how the network is performing.\u00a0 When issues arise, it is essential to have the diagnostic and troubleshooting capability to solve them before any business impact to any tenant.<\/p>\n<p><!--more Read more... --><\/p>\n<p style=\"text-align: justify;\">Looking through \/var\/log\/messages alone just won&#8217;t cut it anymore. \u00a0An Operational CLI with auto-completion features isn&#8217;t enough either. \u00a0A distributed, horizontally scalable SDN Controller needs to provide more\u2026<\/p>\n<p style=\"text-align: justify;\">Data-center Monitoring Software integrates the monitoring of compute, storage, networking and applications in the data center. As compute and storage have been virtualized, more powerful tools have developed for managing and orchestrating them. Software and application management frameworks such as chef and puppet also help with managing distributed applications. There are customizable log collection and analysis tools that help monitor applications as well.<\/p>\n<p style=\"text-align: justify;\">But, as we start looking at network virtualization, it becomes evident that the traditional abstractions and mechanisms for monitoring the network are often somewhat fragmented. There are centralized software applications that monitor network elements using interfaces such as netflow and SNMP. But these mechanisms can suffer from inconsistent implementations across equipment and often do not expose information at the right granularity or abstraction. When troubleshooting is needed, we can find ourselves correlating operational state and counters using CLIs across many individual network elements.<\/p>\n<p style=\"text-align: justify;\">SDN Analytics calls for presenting a <b>seamless single logical view<\/b> of the network in one place.<\/p>\n<p style=\"text-align: justify;\">SDN controllers represent some fundamental changes to how networking software and systems are built -\u2013 we need system-wide abstractions for expressing services, and horizontal scalability of the software itself. \u00a0The debugging and visibility needed for these systems must present information along the axes of basic user abstractions (Virtual Networks, Virtual Machines and their connectivity). \u00a0It&#8217;s vital that monitoring the modern multi-tenant virtualized datacenter be no more complex than the user-abstractions themselves. \u00a0That&#8217;s the principal charter for SDN Analytics.<\/p>\n<p style=\"text-align: justify;\"><b>Abstractions for Analytics:<\/b><\/p>\n<p style=\"text-align: justify;\">One of the fundamental concepts of SDN is the ability to express user configuration in a centralized way, instead of as a mixture of lower-level configuration on multiple network elements of different types. In terms of user configuration, lets take the example of a tenant with Virtual Networks that have VMs inside them and interact with other Virtual and Physical networks according to certain forwarding policies. \u00a0You have software processing elements that translate the Virtual Network configuration into networking protocol constructs such as BGP Route Targets or VXLAN Identifiers. You have other software elements that implement the control protocols, and yet others that serve as the data-forwarding plane and possibly enforce ACL rules.<\/p>\n<p style=\"text-align: justify;\">For monitoring and troubleshooting, it&#8217;s important to manage this complexity appropriately. In this case, we need an aggregate view of what&#8217;s happening with this Virtual Network, even though we are dealing with state that is distributed across multiple processing elements of different types. \u00a0 If there are connectivity problems, we may need to check for consistency of state across processing elements. \u00a0This must also be tied to the topology of the data-forwarding elements. \u00a0Besides state information and configuration information, we need packet counters at each point, and a way to visualize and analyze the topology.<\/p>\n<p style=\"text-align: justify;\"><b>State, Stats and History from a Distributed System:<\/b><\/p>\n<p style=\"text-align: justify;\">Reporting useful state from a distributed system is a matter of having the right abstractions, and having aggregation and syncing mechanisms. Syncing mechanisms have always been present in some form in network protocols; we just need to apply a similar level of rigor to SDN Analytics. We can think of the processing elements of a SDN system themselves as Network Elements forming a network. In that case, having a state aggregation mechanism is akin to a traditional NMS system correlating the operational state of Network Elements. This state aggregation enables us to view the <b>current state<\/b> of the overall system.<\/p>\n<p style=\"text-align: justify;\">But troubleshooting a system is not just a matter of the looking at the current state of the system &#8211; we are often interested in how we got there. Having more granular data is an asset, as long as you can present it in a timely and actionable way. Take an example of a multi-tier application with a web front-end and database back-end. If the application is not able to serve its customers with the right SLA&#8217;s (e.g. transaction latency is much higher than expected), network troubleshooting starts with traffic flows that are attributable to the application. We&#8217;ll need the ability to slice-and-dice traffic statistics for these flows end-to-end between Virtual Network boundaries and even VMs. This can span multiple data-forwarding elements. And, we need to do it in real-time. Doing this at scale, for a large data-center, is challenging. Horizontal software scaling techniques, such as those used in NoSQL database paradigms, can help.<\/p>\n<p style=\"text-align: justify;\"><b>The Open Software Environment:<\/b><\/p>\n<p style=\"text-align: justify;\">Managing the datacenter&#8217;s compute, storage, networking and applications is a fast-moving field. Architectures and solutions evolve along with data-center functional requirements, economics and available technology. SDN Analytics must provide <b>northbound<\/b> interfaces (the interface to provide information) that allow for easy integration with other orchestration and monitoring software applications. Customers may be using 3rd-party vendor applications, and\/or developing software internally under their own DevOps model.<\/p>\n<p style=\"text-align: justify;\">Complex software systems need to support intelligent, proactive monitoring. For example, consider a software bug in routing that results in excessive memory being used by a control plane process. By automatically tracking the memory use of a particular processing element over time, or comparing it to other similar processing elements, we can display outliers that deserve further troubleshooting analysis. SDN Analytics needs to support such detection natively, as well as provide northbound APIs for other software to this.<\/p>\n<p style=\"text-align: justify;\">Open APIs are required for <b>southbound<\/b> interfaces (the interface to gather information) as well. SDN controllers don&#8217;t operate in a vacuum. The network will have a variety of both virtual and physical routers, gateways and network services appliances, and from different vendors. SDN Analytics should provide a consolidated view of all these elements.\u00a0 For example, we should be able to correlate events reported by a physical router with events happening in the SDN control plane.\u00a0 Its possible to extend this further, and correlate with other applications operating in the data-center. Support for standards such as netflow and syslog is helpful. In all these cases, the ability to slice-and-dice the information and search though the vast sea of data is vital.<\/p>\n<p style=\"text-align: justify;\">In future blog entries we will discuss the OpenContrail Analytics solution, and examples of how it addresses these challenges and opportunities. SDN enables powerful solutions for getting agility, security, utilization and performance from the multi-tenant datacenter. Strong Analytics is necessary for humans to actually operate it.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>The benefits of SDN, and the advantages of cloud computing have been well documented.\u00a0 However, when moving to this new distributed environment, there better be a way to have clear&#8230;<\/p>\n","protected":false},"author":465,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Debugging and System Visibility in a SDN Environment - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Debugging and System Visibility in a SDN Environment - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"The benefits of SDN, and the advantages of cloud computing have been well documented.\u00a0 However, when moving to this new distributed environment, there better be a way to have clear...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2013-12-10T22:14:06+00:00\" \/>\n<meta name=\"author\" content=\"Anish Mehta\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/\",\"url\":\"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/\",\"name\":\"Debugging and System Visibility in a SDN Environment - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2013-12-10T22:14:06+00:00\",\"dateModified\":\"2013-12-10T22:14:06+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\",\"name\":\"Anish Mehta\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"caption\":\"Anish Mehta\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Debugging and System Visibility in a SDN Environment - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/","og_locale":"en_US","og_type":"article","og_title":"Debugging and System Visibility in a SDN Environment - Tungsten Fabric","og_description":"The benefits of SDN, and the advantages of cloud computing have been well documented.\u00a0 However, when moving to this new distributed environment, there better be a way to have clear...","og_url":"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/","og_site_name":"Tungsten Fabric","article_published_time":"2013-12-10T22:14:06+00:00","author":"Anish Mehta","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/","url":"https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/","name":"Debugging and System Visibility in a SDN Environment - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2013-12-10T22:14:06+00:00","dateModified":"2013-12-10T22:14:06+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/debugging-and-system-visibility-in-a-sdn-environment\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689","name":"Anish Mehta","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","caption":"Anish Mehta"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/938"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/465"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=938"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/938\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=938"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=938"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=938"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}