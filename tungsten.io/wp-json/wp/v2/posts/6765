{"id":6765,"date":"2015-10-24T19:41:49","date_gmt":"2015-10-25T02:41:49","guid":{"rendered":"http:\/\/www.opencontrail.org\/?p=6765"},"modified":"2015-10-24T19:41:49","modified_gmt":"2015-10-25T02:41:49","slug":"contrail-alerts","status":"publish","type":"post","link":"https:\/\/tungsten.io\/contrail-alerts\/","title":{"rendered":"Contrail Alerts"},"content":{"rendered":"<p>OpenContrail networking provides network virtualization to data center applications using a layered, horizontally scalable software system.\u00a0 We have the abstractions in place to present the operational state of this system <a href=\"http:\/\/www.opencontrail.org\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/).\">(Operational State in the OpenContrail system: UVE \u2013 User Visible Entities through Analytics API)<\/a>. The system is architected to be as simple as possible to operate for the functionality it delivers. An important element of this is Contrail Alerts \u2013 in addition to providing detailed operational state in a easy-to-navigate way, we also need to clearly highlight unusual conditions that may require more urgent administrator attention and action.<\/p>\n<p>We provide Alerts on a per-UVE basis. Contrail Analytics will raise (or clear) instances of these alerts (alarms) using python-coded \u201crules\u201d that examine the contents of the UVE and the object\u2019s configuration. Some rules will be built-in. Others can be added using python Entry-Point based plugins.<\/p>\n<p>See Contrail Alerts\u00a0features in a demo:<\/p>\n[video_lightbox_youtube video_id=&#8221;fUgP2KtAy9A&#8221; width=&#8221;720&#8243; height=&#8221;540&#8243; auto_thumb=&#8221;1&#8243;]\n<h3>Contrail Analytics APIs for Alerts<\/h3>\n<p>There is an API to get the list of supported alerts as follows:<\/p>\n<p><a href=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image1.png\"><img loading=\"lazy\" decoding=\"async\" class=\"wp-image-6766 alignleft\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image1.png\" alt=\"contrail_alerts_blogpost_image1\" width=\"600\" height=\"566\" data-id=\"6766\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>Lets look at an example.<\/p>\n<p>We have a system configured with 2 BGP peers as gateways, but those gateways themselves have not been configured with this system\u2019s control node yet. Based on the state of these peers, we raise an alarm against the control-node UVE.<\/p>\n<p>We can look at the alarms being reported on this system via the following API:<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">GET <em>http:\/\/&lt;analytics-ip&gt;:&lt;rest-api-port&gt;\/analytics\/alarms<\/em><\/span><\/pre>\n<p><a href=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image2.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-6767\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image2.png\" alt=\"contrail_alerts_blogpost_image2\" width=\"938\" height=\"657\" data-id=\"6767\" \/><\/a><\/p>\n<p>The API reports the type of alarm, severity, a description which lists the reason why it exists, whether its been acknowledged yet, and the timestamp. We provide an API for acknowledging alarms as follows:<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">POST http:\/\/:\/analytics\/alarms\/acknowledge\n\nBody: {\u201ctable\u201d: , \u201cname\u201d: , \u201ctype\u201d: , \u201ctoken\u201d: }<\/span><\/pre>\n<p>When the alarm condition is resolved, the alarm will be deleted automatically, whether or not it has been acknowledged.<br \/>\nThe alarm is also shown along with the rest of the UVE if the UVE GET API is used:<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">GET http:\/\/:\/analytics\/uves\/control-node\/<\/span><\/pre>\n<p>In addition to these GET APIs, a streaming interface is also available for both UVEs and Alarms. That interface is\u00a0described in detailed in the\u00a0<a href=\"http:\/\/www.opencontrail.org\/contrail-analytics-streaming-api\/\">Contrail Analytics Streaming API<\/a> blogpost.<\/p>\n<h3>Alarm Processing and Plugins<\/h3>\n<p>New Alerts can be added to the Contrail Analytics by installing python plugins onto the Analyics Nodes. Consistent hashing techniques are used to distribute alarm processing among all functioning Analytics Nodes (the hash is based on the UVE Key). So, the python plugin for an Alert must be installed on each Analytics Node.<br \/>\nLet us look at the plugin for the alert used in the example above.<\/p>\n<p>This module plugin is here:<br \/>\ncontroller\/src\/opserver\/plugins\/alarm_bgp_connectivity\/<\/p>\n<p>We install this plugin as follows:(from alarm_bgp_connectivity\/setup.py)<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">#\n# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.\n#\n\nfrom setuptools import setup, find_packages\n\nsetup(\n    name='alarm_bgp_connectivity',\n    version='0.1dev',\n    packages=find_packages(),\n    entry_points = {\n        'contrail.analytics.alarms': [\n            'ObjectBgpRouter = alarm_bgp_connectivity.main:BgpConnectivity',\n        ],\n    },\n    zip_safe=False,\n    long_description=\"BGPConnectivity alarm\"\n)<\/span><\/pre>\n<p>\u201cObjectBGPRouter\u201d represents the control-node UVE.<br \/>\nSee UVE_MAP in controller\/src\/analytics\/viz.sandesh<\/p>\n<p>The implementation is as follows (from alarm_bgp_connectivity\/main.py)<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">from  opserver.plugins.alarm_base import AlarmBase\n\nclass BgpConnectivity(AlarmBase):\n    \"\"\"Not enough BGP peers are up in BgpRouterState.num_up_bgp_peer\"\"\"\n\n    def __call__(self, uve_key, uve_data):\n        err_list = []\n        if not uve_data.has_key(\"BgpRouterState\"):\n            return self.__class__.__name__, AlarmBase.SYS_WARN, err_list\n\n        ust = uve_data[\"BgpRouterState\"]\n\n        l,r = (\"num_up_bgp_peer\",\"num_bgp_peer\")\n        cm = True\n        if not ust.has_key(l):\n            err_list.append((\"BgpRouterState.%s != None\" % l,\"None\"))\n            cm = False\n        if not ust.has_key(r):\n            err_list.append((\"BgpRouterState.%s != None\" % r,\"None\"))\n            cm = False\n        if cm:\n            if not ust[l] == ust[r]:\n                err_list.append((\"BgpRouterState.%s != BgpRouterState.%s\" \\\n                        % (l,r), \"%s != %s\" % (str(ust[l]), str(ust[r]))))\n\n        return self.__class__.__name__, AlarmBase.SYS_WARN, err_list<\/span><\/pre>\n<p>This plugin code is called anytime a control-node UVE changes. It can examine the contents of the UVE can decide whether an alarm should be raise or not. In this case, we compare the \u201cBgpRouterState.num_bgp_peer\u201d attribute of the UVE with the \u201cBgpRouterState.num_up_bgp_peer\u201d attribute.<\/p>\n<h3>Contrail UI<\/h3>\n<p>A dashboard listing all Alarms present in the system is also available in Contrail UI as follows:<br \/>\n<a href=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image3.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-6768\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image3.png\" alt=\"contrail_alerts_blogpost_image3\" width=\"1273\" height=\"761\" data-id=\"6768\" \/><\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>OpenContrail networking provides network virtualization to data center applications using a layered, horizontally scalable software system.\u00a0 We have the abstractions in place to present the operational state of this system&#8230;<\/p>\n","protected":false},"author":465,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Contrail Alerts - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/contrail-alerts\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Contrail Alerts - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"OpenContrail networking provides network virtualization to data center applications using a layered, horizontally scalable software system.\u00a0 We have the abstractions in place to present the operational state of this system...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/contrail-alerts\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2015-10-25T02:41:49+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image1.png\" \/>\n<meta name=\"author\" content=\"Anish Mehta\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/contrail-alerts\/\",\"url\":\"https:\/\/tungsten.io\/contrail-alerts\/\",\"name\":\"Contrail Alerts - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2015-10-25T02:41:49+00:00\",\"dateModified\":\"2015-10-25T02:41:49+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/contrail-alerts\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\",\"name\":\"Anish Mehta\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"caption\":\"Anish Mehta\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Contrail Alerts - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/contrail-alerts\/","og_locale":"en_US","og_type":"article","og_title":"Contrail Alerts - Tungsten Fabric","og_description":"OpenContrail networking provides network virtualization to data center applications using a layered, horizontally scalable software system.\u00a0 We have the abstractions in place to present the operational state of this system...","og_url":"https:\/\/tungsten.io\/contrail-alerts\/","og_site_name":"Tungsten Fabric","article_published_time":"2015-10-25T02:41:49+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/10\/contrail_alerts_blogpost_image1.png"}],"author":"Anish Mehta","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/contrail-alerts\/","url":"https:\/\/tungsten.io\/contrail-alerts\/","name":"Contrail Alerts - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2015-10-25T02:41:49+00:00","dateModified":"2015-10-25T02:41:49+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/contrail-alerts\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689","name":"Anish Mehta","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","caption":"Anish Mehta"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/6765"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/465"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=6765"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/6765\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=6765"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=6765"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=6765"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}