{"id":1693,"date":"2014-09-23T02:25:27","date_gmt":"2014-09-23T09:25:27","guid":{"rendered":"http:\/\/opencontrail.org\/?p=1693"},"modified":"2014-09-23T02:25:27","modified_gmt":"2014-09-23T09:25:27","slug":"opencontrail-analytics-query-api","status":"publish","type":"post","link":"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/","title":{"rendered":"OpenContrail Analytics Query API"},"content":{"rendered":"<h5>Overview<\/h5>\n<p>OpenContrail analytics platform provides a rich interface to query analytics data stored.<\/p>\n<p>Before we venture into actual API details, let us look at over all architecture of analytics query processing:<br \/>\n<!--more Read more...--><\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-5693\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/09\/sept23_post_image1.jpg\" alt=\"sept23_post_image1\" width=\"610\" height=\"458\" data-id=\"5693\" \/><\/p>\n<p>Analytics query APIs are available as rest APIs and are conceptualized as queries on logical tables. Currently OpenContrail UI uses analytics query API but any other non-contrail client can leverage these rest APIs too.<\/p>\n<p>All analytics logical tables look like following:<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5695\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/09\/sept23_post_image2.jpg\" alt=\"sept23_post_image2\" width=\"597\" height=\"87\" data-id=\"5695\" \/><\/p>\n<p>All rows in logical tables have three different types of rows:<\/p>\n<ol>\n<li>Timestamp column<\/li>\n<li>Index columns: Taken together they are unique per row.<\/li>\n<li>Columns<\/li>\n<\/ol>\n<p>For example \u201cFlow Series Table\u201d looks like following:<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5696\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/09\/sept23_post_image3.jpg\" alt=\"sept23_post_image3\" width=\"633\" height=\"116\" data-id=\"5696\" \/><\/p>\n<p>Columns shaded above are index columns.<\/p>\n<h5>\u00a0Query API Parameters<\/h5>\n<p>OpenContrail analytics query API is modeled on SQL Just to remind the readers a typical SQL query on a table looks like:<\/p>\n<p>SELECT col1, col2, \u2026 coln FROM\u00a0 tablename WHERE index1=value1.<\/p>\n<p>We do not yet support the SQL syntax but the parameters of the analytics query API and SQL query are similar.<\/p>\n<p>Each analytics query has following parameters:<\/p>\n<ol>\n<li>Time range: Timestamp range of rows over which the query has to be performed.<\/li>\n<li>FROM parameter: The name of the logical table that is being queried.<\/li>\n<li>SELECT parameters: It contains the list of columns that need to be returned in the result.<\/li>\n<li>WHERE parameters: It contains the clauses based on index column values to determine the rows from which results have to be shown.<\/li>\n<li>FILTER parameters: It indicates how the result should be filtered after database query and before being returned to the API invoker.<\/li>\n<li>SORT parameters: It indicates if and how the result should be sorted.<\/li>\n<\/ol>\n<p><strong><em>In rest of the blog we will take example of a simple query to return all ingress TCP flows which were active in last 12 hours with source vn as default-domain:default-project:ip-fabric. As part of query result we also want to get the setup time of the flows.<\/em><\/strong><\/p>\n<p><strong><em>\u00a0<\/em><\/strong>Below is the UI screen of this query:<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5697\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/09\/sept23_post_image4.jpg\" alt=\"sept23_post_image4\" width=\"1433\" height=\"492\" data-id=\"5697\" \/><\/p>\n<pre><span style=\"font-family: 'courier new', courier;\"><code>{\n \"table\":\"FlowRecordTable\",\n \"start_time\":\"now-43200s\",\n \"end_time\":\"now\",\n \"select_fields\":[\"vrouter\",\"sourcevn\",\"sourceip\",\"sport\",\"destvn\",\"destip\",\"dport\",\"protocol\",\"direction_ing\",\"setup_time\"],\n \"limit\":150000,\n \"where\":[[\n {\"name\":\"sourcevn\",\"value\":\"default-domain:default-project:ip-fabric\",\"op\":1},\n {\"name\":\"protocol\",\"value\":\"6\",\"op\":1}\n ]],\n \"dir\":1\n }<\/code><\/span><\/pre>\n<h5>Table name<\/h5>\n<p>Logical table on which the query is performed is indicated by JSON field \u201ctable\u201d. In our example query, we are query \u201cFlowRecordTable\u201d whose rows correspond to each flow record.<\/p>\n<h5>Query time range<\/h5>\n<p>You always have to provide the time range of the analytics data over which the query is applicable.\u00a0 Time range is indicated by JSON fields: <strong>\u201cstart_time\u201d <\/strong>and <strong>\u201cend_time\u201d<\/strong>.<\/p>\n<p>Values of these JSON fields can be absolute time or relative time (like in our example query). In case of absolute time you just specify the date-time string.<\/p>\n<h5>Direction<\/h5>\n<p>In case of flow queries you should always specify direction using \u201cdir\u201d JSON field. For egress traffic value of 0 is used while for ingress traffic value of 1 is used.<\/p>\n<h5>Select fields<\/h5>\n<p>\u201cselect_fields\u201d JSON field indicate the fields\/columns of the logical table which should be returned as part of the query result. Semantic of this is same as SELECT operation in SQL language.<\/p>\n<h5>WHERE clause<\/h5>\n<p>WHERE clause has similar semantic as the WHERE operator in SQL language.<\/p>\n<p>WHERE clause is represented by \u201cwhere\u201d JSON field.<\/p>\n<p>Value of \u201cwhere\u201d field is represented by:<br \/>\nWhere_clause := [AND_Clause1, AND_Clause2, \u2026 AND_ClauseN]\nAND_Clause := [Match_Clause1, Match_Clause2, \u2026 Match_ClauseK]\nMatch_Clause := { \u201cname\u201d : &lt;field_name&gt;, \u201cvalue\u201d: &lt;value_name&gt;, \u201cop\u201d: &lt;op&gt;}<\/p>\n<p>Basically where_clause is an OR expression of AND clauses to pick a subset of rows from the logical table. Match clauses indicate the fields to match against.<\/p>\n<p>In our example query, Match_clauses are:<\/p>\n<p>{&#8220;name&#8221;:&#8221;sourcevn&#8221;,&#8221;value&#8221;:&#8221;default-domain:default-project:ip-fabric&#8221;,&#8221;op&#8221;:1}<\/p>\n<p>{&#8220;name&#8221;:&#8221;protocol&#8221;,&#8221;value&#8221;:&#8221;6&#8243;,&#8221;op&#8221;:1}<\/p>\n<p>\u201cname\u201d indicates the field to match against. \u201cvalue\u201d is the value \u00a0used for,matching\/filering rows.\u00a0 \u201cop\u201d indicates the matching operation. Value of \u201c1\u201d \u00a0for \u201cop\u201d implies equality operator.<\/p>\n<p>You can represent any kind of Boolean expression in the WHERE clause.<\/p>\n<h5>Post processing the query results<\/h5>\n<p>You can ask the analytics engine to do some post-processing after the basic query processing. This can include sorting, filtering.<\/p>\n<p>In our example query, we use \u201climit\u201d JSON field to indicate maximum number of records to return. This is always helpful as analytics API client may not be able to handle unlimited amount of data.<\/p>\n<h5>Conclusion<\/h5>\n<p>OpenContrail Analytics Query API is a rich API which allows you to drill down to the right information you need from the analytics engine. Example discussed above is just the tip of the iceberg of possibilities with the API. Do refer to the reference guide for full details.<\/p>\n<p><strong>Reference Guide: <\/strong><a href=\"http:\/\/www.juniper.net\/techpubs\/en_US\/contrail2.2\/topics\/task\/configuration\/analytics-apis-vnc.html\" target=\"_blank\">http:\/\/www.juniper.net\/techpubs\/en_US\/contrail2.2\/topics\/task\/configuration\/analytics-apis-vnc.html<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Overview OpenContrail analytics platform provides a rich interface to query analytics data stored. Before we venture into actual API details, let us look at over all architecture of analytics query&#8230;<\/p>\n","protected":false},"author":476,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>OpenContrail Analytics Query API - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"OpenContrail Analytics Query API - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"Overview OpenContrail analytics platform provides a rich interface to query analytics data stored. Before we venture into actual API details, let us look at over all architecture of analytics query...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2014-09-23T09:25:27+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/09\/sept23_post_image1.jpg\" \/>\n<meta name=\"author\" content=\"Chandan Mishra\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/\",\"url\":\"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/\",\"name\":\"OpenContrail Analytics Query API - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2014-09-23T09:25:27+00:00\",\"dateModified\":\"2014-09-23T09:25:27+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/b60592c8c8ab4989b485a2c832e8e869\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/b60592c8c8ab4989b485a2c832e8e869\",\"name\":\"Chandan Mishra\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/e865a534bf76484fc65cb6a8fdaa41e6?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/e865a534bf76484fc65cb6a8fdaa41e6?s=96&d=mm&r=pg\",\"caption\":\"Chandan Mishra\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"OpenContrail Analytics Query API - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/","og_locale":"en_US","og_type":"article","og_title":"OpenContrail Analytics Query API - Tungsten Fabric","og_description":"Overview OpenContrail analytics platform provides a rich interface to query analytics data stored. Before we venture into actual API details, let us look at over all architecture of analytics query...","og_url":"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/","og_site_name":"Tungsten Fabric","article_published_time":"2014-09-23T09:25:27+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/09\/sept23_post_image1.jpg"}],"author":"Chandan Mishra","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/","url":"https:\/\/tungsten.io\/opencontrail-analytics-query-api\/","name":"OpenContrail Analytics Query API - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2014-09-23T09:25:27+00:00","dateModified":"2014-09-23T09:25:27+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/b60592c8c8ab4989b485a2c832e8e869"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/opencontrail-analytics-query-api\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/b60592c8c8ab4989b485a2c832e8e869","name":"Chandan Mishra","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/e865a534bf76484fc65cb6a8fdaa41e6?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/e865a534bf76484fc65cb6a8fdaa41e6?s=96&d=mm&r=pg","caption":"Chandan Mishra"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/1693"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/476"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=1693"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/1693\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=1693"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=1693"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=1693"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}