{"id":4968,"date":"2014-06-10T21:35:14","date_gmt":"2014-06-10T21:35:14","guid":{"rendered":"http:\/\/opencontrail.org\/?p=1570"},"modified":"2014-06-10T21:35:14","modified_gmt":"2014-06-10T21:35:14","slug":"opencontrail-and-devstack","status":"publish","type":"post","link":"https:\/\/tungsten.io\/opencontrail-and-devstack\/","title":{"rendered":"OpenContrail and DevStack"},"content":{"rendered":"<h4>Update (01\/05\/2015) : Since this blog was last published, there has been an update in the process for Installing OpenContrail. For the latest instructions check:\u00a0<a href=\"https:\/\/github.com\/juniper\/contrail-installer\">https:\/\/github.com\/juniper\/contrail-installer<\/a><\/h4>\n<h4>1.\u00a0\u00a0\u00a0\u00a0 Introduction<\/h4>\n<p><strong>OpenStack<\/strong> is a global collaboration of developers and cloud computing technologists working to develop an open source cloud computing platform for public and private clouds. It consists of a series of interrelated projects delivering various components for a cloud infrastructure solution.<\/p>\n<p><strong>OpenContrail<\/strong> is a great fundamental network component for a cloud infrastructure which is built using standard based protocols and provides network virtualization, network programmability and automation. OpenContrail is modular and integrates into open cloud orchestration platforms such as OpenStack, CloudStack and is currently supported across multiple Linux distributions and hypervisors.<br \/>\n<!--more Read more...--><\/p>\n<p><strong>DevStack<\/strong> is great way to get started with OpenStack. It is a repository of code which will install and start an OpenStack development and testing environment.<\/p>\n<p><span style=\"color: #ff0000;\"><strong>This blog post gives detailed instructions on how to install DevStack along with OpenContrail. <\/strong><\/span><\/p>\n<h5>Who would install DevStack?<\/h5>\n<p>DevStack is installed generally by those who wish to contribute to OpenStack code. Those wishing to install OpenStack for production should install OpenStack from distribution packages or a tarball. DevStack is not recommended for production.<\/p>\n<h5>What do you need?<\/h5>\n<p>An isolated environment is needed to install DevStack with OpenContrail \u2013 a VM or a separate physical server \u2013 an environment that can be setup, taken down, overwritten and reinstalled without affecting the regular development environment.<\/p>\n<h5>Setup Requirements<\/h5>\n<ul>\n<li>Linux distribution \u2013 Ubuntu 12.04.<\/li>\n<li>Size \u2013 4Gb RAM<\/li>\n<\/ul>\n<p>Note: You would also need login credential in github.com for DevStack.<\/p>\n<h4>2.\u00a0\u00a0\u00a0\u00a0 Installation of DevStack with OpenContrail<\/h4>\n<p>We know that DevStack is set of scripts that downloads and installs Openstack development and testing environment. The OpenContrail team has created a github fork of the DevStack repository that also downloads and installs various components of OpenContrail.<\/p>\n<p>As a part of this article, I am going to cover the installation steps to be followed for setting up DevStack with OpenContrail and then show how this setup can be used to test\/validate Openstack integration with OpenContrail.<\/p>\n<p>To have a basic working setup, there are two simple topologies in which we can DevStack + OpenContrail environment.<\/p>\n<ol>\n<li>A single node setup where both Openstack controller and compute reside in a single physical host or VM.<\/li>\n<li>A multi-node setup where there is one physical host or VM as Openstack controller and one or more physical hosts or VMs as compute.<\/li>\n<\/ol>\n<p><strong><em>Note: These installation steps are for <span style=\"color: #ff0000;\">Ubuntu<\/span> based installations.<\/em><\/strong><\/p>\n<h5>2.1 Single Node DevStack Setup<\/h5>\n<p>1. Login to Ubuntu machine (VM or physical machine).<br \/>\n<span style=\"font-family: Courier New;\">Note: You need to create a user \u2013 \u201cubuntu\u201d and add it to sudoers list. <\/span><\/p>\n<p>2. Add the following line to \/etc\/hosts<br \/>\n<span style=\"font-family: Courier New;\">127.0.1.1 ubuntu<\/span><\/p>\n<p>3. Update all the packages in Ubuntu<br \/>\n<span style=\"font-family: Courier New;\">sudo apt-get update<\/span><\/p>\n<p>4. Install the following packages for ubuntu<\/p>\n<ul>\n<li><strong>git-core<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">\u00a0sudo apt-get install git-core<\/span><\/pre>\n<ul>\n<li><strong>ant<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install ant<\/span><\/pre>\n<ul>\n<li><strong>build-essential<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo aptitude install build-essential<\/span><\/pre>\n<ul>\n<li><strong>pkg-config<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install pkg-config<\/span><\/pre>\n<ul>\n<li><strong>linux kernel headers<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">\u00a0sudo apt-get install linux-headers-3.2.0-35-virtual<\/span><\/pre>\n<p>5. Download DevStack<\/p>\n<p>a. Verify SSH to github is working correctly in your setup<br \/>\n<span style=\"font-family: Courier New;\">ssh -T\u00a0 git@github.com<\/span><\/p>\n<p>b. Checkout source from github<br \/>\n<span style=\"font-family: Courier New;\">git clone\u00a0<a href=\"mailto:git@github.com:dsetia\/devstack.git\">git@github.com:dsetia\/devstack.git<\/a><\/span><\/p>\n<p>6. Edit localrc and change PHYSICAL_INTERFACE to match your setup<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cd devstack<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cp contrail\/localrc-single localrc<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vi localrc \u00a0# edit PHYSICAL_INTERFACE<\/span><\/pre>\n<p>7. Run stack.sh script. Stack.sh is an opinionated OpenStack developer installation. It installs and configures various combinations of Glance, Nova, Horizon, Keystone, Cinder and OpenContrail as neutron plugin in our case.<br \/>\n<span style=\"font-family: Courier New;\">.\/stack.sh<\/span><\/p>\n<p>This could be also called as DevStack-in-a-box setup.<\/p>\n<h5>2.2 Multi-Node DevStack Setup<\/h5>\n<p>A multi-node DevStack setup has one physical host or VM as controller\/master node and one or more physical host or VMs as compute nodes. The controller node and the one or more compute nodes needed to be connected to each other on an IP capable physical network. There is no specific physical network topology needed for this setup to work seamlessly.<\/p>\n<h4>3. Physical Network Topology<\/h4>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-5700\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image1.png\" alt=\"ranjani_blogpost_image1\" width=\"600\" height=\"530\" data-id=\"5700\" \/><\/p>\n<h5>3.1 Steps for Master\/Controller Host<\/h5>\n<p>1. Login to Master or Controller Host (VM or physical machine).<br \/>\n<span style=\"font-family: Courier New;\">Note: You need to create a user \u2013 \u201cubuntu\u201d and add it to sudoers list.<\/span><\/p>\n<p>2. Add the following line to \/etc\/hosts<br \/>\n<span style=\"font-family: Courier New;\">127.0.1.1 ubuntu<\/span><\/p>\n<p>3. Update all the packages in Ubuntu<br \/>\n<span style=\"font-family: Courier New;\">sudo apt-get update<\/span><br \/>\n4. Install the following packages for ubuntu<\/p>\n<ul>\n<li><strong>git-core<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install git-core<\/span><\/pre>\n<ul>\n<li><strong>ant<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install ant<\/span><\/pre>\n<ul>\n<li><strong>build-essential<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo aptitude install build-essential<\/span><\/pre>\n<ul>\n<li><strong>pkg-config<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install pkg-config<\/span><\/pre>\n<ul>\n<li><strong>linux kernel headers<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install linux-headers-3.2.0-35-virtual<\/span><\/pre>\n<p>5. Download DevStack<br \/>\na.Verify SSH to github is working correctly in your setup<br \/>\n<span style=\"font-family: Courier New;\">ssh -T\u00a0 git@github.com<\/span><\/p>\n<p>b. Checkout source from github<br \/>\n<span style=\"font-family: Courier New;\">git clone\u00a0<a href=\"mailto:git@github.com:dsetia\/devstack.git\">git@github.com:dsetia\/devstack.git<\/a><\/span><\/p>\n<p>6. Edit localrc as shown below<\/p>\n<pre>\u00a0 \u00a0 \u00a0 <span style=\"font-family: 'courier new', courier;\">\u00a0 \u00a0\u00a0 cd devstack<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cp contrail\/localrc-multinode-server localrc<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vi localrc \u00a0# edit PHYSICAL_INTERFACE<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0edit HOST_IP=&lt;IP address of Master\/Controller Host&gt;<\/span><\/pre>\n<p>7. Run stack.sh script. Stack.sh is an opinionated OpenStack developer installation. It installs and configures various combinations of Glance, Nova, Horizon, Keystone, Cinder and OpenContrail as neutron plugin in our case.<br \/>\n<span style=\"font-family: Courier New;\">.\/stack.sh<\/span><\/p>\n<h5>3.2 Steps for Compute Host<\/h5>\n<p>There could be one or more compute hosts. These steps given below need to be executed individually on each compute host.<\/p>\n<p>1. Login to Compute Host (VM or physical machine).<br \/>\n<span style=\"font-family: Courier New;\">Note: You need to create a user \u2013 \u201cubuntu\u201d and add it to sudoers list.<\/span><\/p>\n<p>2. Add the following line to \/etc\/hosts<br \/>\n<span style=\"font-family: Courier New;\">127.0.1.1 ubuntu<\/span><\/p>\n<p>3. Update all the packages in Ubuntu<br \/>\n<span style=\"font-family: Courier New;\">sudo apt-get update<\/span><\/p>\n<p>4. Install the following packages for ubuntu<\/p>\n<ul>\n<li><strong>git-core<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install git-core<\/span><\/pre>\n<ul>\n<li><strong>ant<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install ant<\/span><\/pre>\n<ul>\n<li><strong>build-essential<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo aptitude install build-essential<\/span><\/pre>\n<ul>\n<li><strong>pkg-config<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">\u00a0sudo apt-get install pkg-config<\/span><\/pre>\n<ul>\n<li><strong>linux kernel headers<\/strong><\/li>\n<\/ul>\n<pre>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span style=\"font-family: 'courier new', courier;\">sudo apt-get install linux-headers-3.2.0-35-virtual<\/span><\/pre>\n<p>5. Download DevStack<\/p>\n<p>a. Verify SSH to github is working correctly in your setup<\/p>\n<p><span style=\"font-family: Courier New;\">ssh -T\u00a0 git@github.com<\/span><\/p>\n<p>b. Checkout source from github<br \/>\n<span style=\"font-family: Courier New;\">git clone\u00a0<a href=\"mailto:git@github.com:dsetia\/devstack.git\">git@github.com:dsetia\/devstack.git<\/a><\/span><\/p>\n<p>6. Edit localrc as shown below<\/p>\n<pre>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span style=\"font-family: 'courier new', courier;\">\u00a0 cd devstack<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cp contrail\/localrc-multinode-compute localrc<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vi localrc \u00a0# edit PHYSICAL_INTERFACE<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0edit SERVICE_HOST=&lt;IP address of Master\/Controller Host&gt;<\/span><\/pre>\n<p>7. Run stack.sh script. Stack.sh is an opinionated Openstack developer installation. It installs and configures various combinations of Glance, Nova, Horizon, Keystone, Cinder and OpenContrail as neutron plugin in our case. On a compute host, it would install only nova, neutron and OpenContrail and its dependencies.<br \/>\n<span style=\"font-family: Courier New;\">.\/stack.sh<\/span><\/p>\n<h4>4. \u00a0Verify the installation<\/h4>\n<p>Once the stack.sh has completed its execution successfully, you can check to make sure the services show smiley faces <a href=\"http:\/\/opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image11.gif\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5711\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image11.gif\" alt=\"ranjani_blogpost_image11\" width=\"15\" height=\"15\" data-id=\"5711\" \/><\/a>\u00a0and not XXX with \u2018nova-manage service list\u2019 command on each node of your setup.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5701\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image2.png\" alt=\"ranjani_blogpost_image2\" width=\"905\" height=\"148\" data-id=\"5701\" \/><\/p>\n<p>Now you have OpenContrail with latest release of Openstack running in your environment. You can access the Openstack horizon dashboard of this version using http:\/\/&lt;IP-Address-of-Master-Node&gt;. The foundation has now been laid for you to develop and test OpenContrail with Openstack. You can now explore the power of network programmability and automation using the APIs that OpenContrail provides.<\/p>\n<h4>5. Using DevStack to explore OpenContrail<\/h4>\n<p>Now that we have a working setup of DevStack + OpenContrail, lets start exploring the various capabilities that OpenContrail has to offer.<\/p>\n<h5>5.1 Openstack Glance Guest VMs Images<\/h5>\n<p>DevStack by default downloads CirrOS but in case you want to install another image like Ubuntu cloud image, you can follow the steps below:<\/p>\n<ol>\n<li>Download the Ubuntu cloud image using wget<img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5702\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image3.png\" alt=\"ranjani_blogpost_image3\" width=\"907\" height=\"237\" data-id=\"5702\" \/><\/li>\n<li>Add this image to the glance repository of your setup<img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5703\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image4.png\" alt=\"ranjani_blogpost_image4\" width=\"1230\" height=\"380\" data-id=\"5703\" \/><\/li>\n<\/ol>\n<h5>5.2 Using OpenContrail for Networking<\/h5>\n<p>OpenContrail is a plugin for Openstack Neutron that enables to dynamically define and configure logical network connectivity between devices from other Openstack services (e.g. vNICs from Nova) and switches\/routers. It provides us a set of APIs called VNC APIs that we would be leveraging to create virtual networks and define network connectivity between the virtual machines.<\/p>\n<p>As an example, I am going to create two different virtual networks \u2013 Red-VN and Blue-VN having two different IP Address range. Blue-VN is having IP subnet 192.168.1.0\/24 and Red-VN is having subnet 192.168.2.0\/24. Then two virtual machines each are spawned on Blue and Red VNs. Once these VMs are up, we will do a ping between VMs in the same VN and also between VMs in different VNs.<\/p>\n<p style=\"text-align: center;\"><em><strong>Virtual Network Topology<\/strong><\/em><\/p>\n<p style=\"text-align: center;\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5704\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image5.png\" alt=\"ranjani_blogpost_image5\" width=\"977\" height=\"827\" data-id=\"5704\" \/><\/p>\n<p>Below are the steps and code snippets showing how to deploy the above scenario using Openstack Neutron APIs<\/p>\n<p>1. As part of DevStack + OpenContrail installation, a project (aka tenant) called \u2018demo\u2019 is created. Before starting to use neutron APIs, we need to initialize neutron client object<\/p>\n<pre><code><span style=\"font-family: 'courier new', courier;\"> import neutronclient.v2_0.client<\/span>\n<span style=\"font-family: 'courier new', courier;\"> neutron = neutronclient.v2_0.client.Client(<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0username = 'admin',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0password = 'contrail123',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tenant_name = 'demo',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auth_url = 'http:\/\/10.84.18.1:35357\/v2.0')<\/span>\n <\/code><\/pre>\n<pre>2. Create the \u2018Blue-VN\u2019 network\n <code>\n <span style=\"font-family: 'courier new', courier;\"># Create Blue virtual network.<\/span>\n<span style=\"font-family: 'courier new', courier;\"> blue_vn = {<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name': 'Blue-VN',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'admin_state_up': True,<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'shared' : False<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<\/span>\n<span style=\"font-family: 'courier new', courier;\"> blue_vn = neutron.create_network({'network': blue_vn}<\/span><\/code><\/pre>\n<p>3. Create a subnet IP address range and associate it with this Blue Network<\/p>\n<pre><code><span style=\"font-family: 'courier new', courier;\">blue_subnet = {<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'ip_version': 4,<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'cidr': '192.168.1.0\/24',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'gateway_ip': '192.168.1.253',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<\/span>\n<span style=\"font-family: 'courier new', courier;\"> blue_subnet.update({'network_id': blue_vn['network']['id']})<\/span>\n<span style=\"font-family: 'courier new', courier;\"> neutron.create_subnet({'subnet': blue_subnet})<\/span>\n <\/code><\/pre>\n<p>4. Create the \u2018Red-VN\u2019 network<\/p>\n<pre><code><span style=\"font-family: 'courier new', courier;\"># Create Red virtual network.<\/span>\n<span style=\"font-family: 'courier new', courier;\"> red_vn = {<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'name': 'Red-VN',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'admin_state_up': True,<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'shared' : False<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<\/span>\n<span style=\"font-family: 'courier new', courier;\"> red_vn = neutron.create_network({'network': red_vn})<\/span>\n <\/code><\/pre>\n<pre>5. Create a subnet IP address range and associate it with this Red Network\n <code><span style=\"font-family: 'courier new', courier;\">red_subnet = {<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'ip_version': 4,<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'cidr': '192.168.2.0\/24',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'gateway_ip': '192.168.2.253',<\/span>\n<span style=\"font-family: 'courier new', courier;\"> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<\/span>\n<span style=\"font-family: 'courier new', courier;\"> red_subnet.update({'network_id': red_vn['network']['id']})<\/span>\n<span style=\"font-family: 'courier new', courier;\"> neutron.create_subnet({'subnet': red_subnet})<\/span>\n <\/code><\/pre>\n<p>6. Launch two VMs each in Blue-VN and Red-VN.<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\"><code># Create a Nova Client\n nova = novaclient.v1_1.client.Client(\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0username = 'admin',\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0api_key = 'contrail123',\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0project_id = 'demo',\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auth_url = 'http:\/\/10.84.18.1:35357\/v2.0')\n # Launch 2 VMs - each in Blue VN and Red VN\n blue_vm1 = nova.servers.create(\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name = 'Blue-VM1',\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image = nova.images.find(name = 'ubuntu'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0flavor = nova.flavors.find(name = 'm1.small'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nics = [{'net-id': blue_vn.uuid}])\n red_vm1 = nova.servers.create(\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name = 'Red-VM1',\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image = nova.images.find(name = 'ubuntu'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0flavor = nova.flavors.find(name = 'm1.small'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nics = [{'net-id': red_vn.uuid}])\n blue_vm2 = nova.servers.create(\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name = 'Blue-VM2',\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image = nova.images.find(name = 'ubuntu'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0flavor = nova.flavors.find(name = 'm1.small'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nics = [{'net-id': blue_vn.uuid}])\n red_vm2 = nova.servers.create(\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name = 'Red-VM2',\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0image = nova.images.find(name = 'ubuntu'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0flavor = nova.flavors.find(name = 'm1.small'),\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nics = [{'net-id': red_vn.uuid}])<\/code><\/span><\/pre>\n<p>7. Check if all the VMs are in active state<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5705\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image6.png\" alt=\"ranjani_blogpost_image6\" width=\"904\" height=\"150\" data-id=\"5705\" \/><\/p>\n<p>8. Log in to \u2018Blue-VM1\u2019 and ping the \u2018Blue-VM2\u2019. To login into VM from the host, run the command \u2018netstat-rn\u2019 and then ssh into link-local address.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5706\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image7.png\" alt=\"ranjani_blogpost_image7\" width=\"649\" height=\"164\" data-id=\"5706\" \/><\/p>\n<p>Now ssh to IP address 169.254.0.4 and check the IP address<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5707\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image8.png\" alt=\"ranjani_blogpost_image8\" width=\"610\" height=\"329\" data-id=\"5707\" \/><\/p>\n<p>Now ping \u2018Blue-VM2\u2019 having the IP address 192.168.1.252<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5708\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image9.png\" alt=\"ranjani_blogpost_image9\" width=\"590\" height=\"237\" data-id=\"5708\" \/><\/p>\n<p>9. Ping to \u2018Red-VM1\u2019 having IP address 192.168.2.253 from \u2018Blue-VM1\u2019<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5709\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image10.png\" alt=\"ranjani_blogpost_image10\" width=\"541\" height=\"125\" data-id=\"5709\" \/><\/p>\n<h4>6. Summary<\/h4>\n<p>With a very limited amount of hardware, one can create a DevStack with OpenContrail setup. There is so much more that OpenContrail has to offer than what is covered here but this lays the foundation for building simple networks to connect instances.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Update (01\/05\/2015) : Since this blog was last published, there has been an update in the process for Installing OpenContrail. For the latest instructions check:\u00a0https:\/\/github.com\/juniper\/contrail-installer 1.\u00a0\u00a0\u00a0\u00a0 Introduction OpenStack is a&#8230;<\/p>\n","protected":false},"author":478,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[11,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>OpenContrail and DevStack - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/opencontrail-and-devstack\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"OpenContrail and DevStack - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"Update (01\/05\/2015) : Since this blog was last published, there has been an update in the process for Installing OpenContrail. For the latest instructions check:\u00a0https:\/\/github.com\/juniper\/contrail-installer 1.\u00a0\u00a0\u00a0\u00a0 Introduction OpenStack is a...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/opencontrail-and-devstack\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2014-06-10T21:35:14+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image1.png\" \/>\n<meta name=\"author\" content=\"Ranjini Rajendran\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/opencontrail-and-devstack\/\",\"url\":\"https:\/\/tungsten.io\/opencontrail-and-devstack\/\",\"name\":\"OpenContrail and DevStack - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2014-06-10T21:35:14+00:00\",\"dateModified\":\"2014-06-10T21:35:14+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/627c8a40dc8ea7aa17185a5c26860f72\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/opencontrail-and-devstack\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/627c8a40dc8ea7aa17185a5c26860f72\",\"name\":\"Ranjini Rajendran\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/6fefdb66b7f442462a39b85dde9efe62?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/6fefdb66b7f442462a39b85dde9efe62?s=96&d=mm&r=pg\",\"caption\":\"Ranjini Rajendran\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"OpenContrail and DevStack - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/opencontrail-and-devstack\/","og_locale":"en_US","og_type":"article","og_title":"OpenContrail and DevStack - Tungsten Fabric","og_description":"Update (01\/05\/2015) : Since this blog was last published, there has been an update in the process for Installing OpenContrail. For the latest instructions check:\u00a0https:\/\/github.com\/juniper\/contrail-installer 1.\u00a0\u00a0\u00a0\u00a0 Introduction OpenStack is a...","og_url":"https:\/\/tungsten.io\/opencontrail-and-devstack\/","og_site_name":"Tungsten Fabric","article_published_time":"2014-06-10T21:35:14+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/ranjani_blogpost_image1.png"}],"author":"Ranjini Rajendran","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/opencontrail-and-devstack\/","url":"https:\/\/tungsten.io\/opencontrail-and-devstack\/","name":"OpenContrail and DevStack - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2014-06-10T21:35:14+00:00","dateModified":"2014-06-10T21:35:14+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/627c8a40dc8ea7aa17185a5c26860f72"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/opencontrail-and-devstack\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/627c8a40dc8ea7aa17185a5c26860f72","name":"Ranjini Rajendran","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/6fefdb66b7f442462a39b85dde9efe62?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/6fefdb66b7f442462a39b85dde9efe62?s=96&d=mm&r=pg","caption":"Ranjini Rajendran"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/4968"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/478"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=4968"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/4968\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=4968"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=4968"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=4968"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}