{"id":1015,"date":"2013-12-17T06:57:43","date_gmt":"2013-12-17T06:57:43","guid":{"rendered":"http:\/\/opencontrail.org\/?p=1015"},"modified":"2013-12-17T06:57:43","modified_gmt":"2013-12-17T06:57:43","slug":"i-studied-opencontrail","status":"publish","type":"post","link":"https:\/\/tungsten.io\/i-studied-opencontrail\/","title":{"rendered":"Mixi&#8217;s Review of OpenContrail"},"content":{"rendered":"<p style=\"text-align: justify;\" align=\"left\"><em>Mixi is Japanese SNS provider. Recently, Junpei Yoshino, an applications operations engineer at Mixi, wrote a blog about his thoughts on OpenContrail. The direct blog is posted at <a href=\"http:\/\/alpha.mixi.co.jp\/2013\/12038\/\">http:\/\/alpha.mixi.co.jp\/2013\/12038\/<\/a>, but we&#8217;ve translated to English and posted with permission below.<\/em><\/p>\n<p><!--more Read more...--><\/p>\n<p style=\"text-align: justify;\" align=\"left\">I have been evaluating virtualized network in service providing environment and during the course strongly felt that I should study OpenContrail, so I would like to record my thought processes here.\u00a0 In 3 lines, I can describe OpenContrail as follows:<\/p>\n<ul style=\"text-align: justify;\">\n<li>OpenContrail is a good alternative when you think of realistic gateway implementation as of today.<\/li>\n<li>Openvswitch emulates L2 switch while OpenContrail emulates router.<\/li>\n<li>Things that openvswitch is not good at, such as hiding mac address or mss adjustment, are taken care of by OpenContrail.<\/li>\n<\/ul>\n<p style=\"text-align: justify;\" align=\"left\">I understand there will be some discussions on OpenContrail in the OpenStack Days Tokyo tonight, so I decided to write this article along with the forum.<\/p>\n<div style=\"text-align: justify;\">\n<h6 align=\"left\"><b>Background<\/b><\/h6>\n<\/div>\n<p style=\"text-align: justify;\" align=\"left\">I have many challenges in the current Mixi network, however, the two biggest challenges are below:<\/p>\n<ul style=\"text-align: justify;\">\n<li>Generic concerns operating a large L2 network<\/li>\n<li>Since the network is designed assuming we operate only one service, we cannot do tenant partitioning<\/li>\n<\/ul>\n<div style=\"text-align: justify;\">\n<h6 align=\"left\"><b>Issues with the existing implementation<\/b><\/h6>\n<\/div>\n<ul style=\"text-align: justify;\">\n<li>If the number of our subsidiaries or services increase, it is not easy to provide additional services (I don\u2019t want to increase number of vlans anymore).<\/li>\n<li>When number of mac or arp tables increase as a result of virtualization, options for equipment selection become limited.<\/li>\n<\/ul>\n<div style=\"text-align: justify;\">\n<p align=\"left\"><b>\u00a0<\/b><b>Resolution Ideas<\/b><\/p>\n<\/div>\n<p style=\"text-align: justify;\" align=\"left\">I compared two edge overlay methods this time.\u00a0 I expect lead time to start services, and cost to procure equipment, to be reduced by edge overlay. \u00a0For the same reason, I am focusing on the methods that do not to rely on multicast.\u00a0 Openvswitch emulates L2 switch and OpenContrail emulates router.\u00a0 Now, I would like to raise 3 points that I think are important in order to compare the two methods, and provide comparisons in detail.<\/p>\n<ul style=\"text-align: justify;\">\n<li>Implementation example using openvswitch\n<ul>\n<li>Arp packet processing: Controller looks up the address arp would like to resolve, create flow and forward the packet<\/li>\n<li>IP packet processing: Controller looks up destination address in IP, create flow and forward the packet.<\/li>\n<li>Tenant partitioning method: Partitioning using tunnel_id configured by openflow, etc.<\/li>\n<\/ul>\n<\/li>\n<li>Implementation example using OpenContrail\n<ul>\n<li>Arp packet processing: vRouter responds to arp<\/li>\n<li>IP packet processing: vRouter looks up vrf routing table and forwards the packet \uff08\/32 route is included\uff09<\/li>\n<li>Tenant partitioning method:\u00a0 Partitioning of routing table by MPLS<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h6 align=\"left\"><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-5747 aligncenter\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2013\/12\/blogpost1015_image.png\" alt=\"blogpost1015_image\" width=\"401\" height=\"427\" data-id=\"5747\" \/><\/h6>\n<h6 style=\"text-align: justify;\" align=\"left\"><b>Point #1: Gateway implementation<\/b><\/h6>\n<p style=\"text-align: justify;\" align=\"left\">I would like to think about how virtualized network can talk to legacy network.<\/p>\n<p style=\"text-align: justify;\" align=\"left\">Think about N+1 redundancy of gateway operation, and behavior or ease of maintenance in such environment. I believe it is better that gateway is connected using L3.<\/p>\n<p style=\"text-align: justify;\" align=\"left\">I evaluated implementations below and my conclusion is that I like OpenContrail for following reasons:<\/p>\n<ul style=\"text-align: justify;\">\n<li>When I use openflow switch and use L2 to connect to legacy network, I need to care about flooding.<\/li>\n<li>I don\u2019t know any network equipment that has sufficient flow table size assuming we use openflow switch, while it is capable of talking L3 protocol without external aid.<\/li>\n<li>Opencontrail uses router for gateway and therefore it is easy to use traditional ospf max metric for traffic re-routing<\/li>\n<\/ul>\n<h6 style=\"text-align: justify;\" align=\"left\"><b>Sample implementation of L2 gateway using openvswitch + tunnel<\/b><\/h6>\n<ul style=\"text-align: justify;\">\n<li>Connect openvswitch port to L3 switch<\/li>\n<li>If unknown unicast flooding occurs in the redundant configuration, multiple packets flow to the virtual network and that needs to be taken into consideration.\n<ul>\n<li>Eg) controller determines which openvswitch passes the flooding packets<\/li>\n<li>Eg) configure L3 switch to forward unknown unicast flooding to some designated port only<\/li>\n<\/ul>\n<\/li>\n<li>Once mac table on L3 switch is learned, packets are forwarded using the L2 gateway and therefore it may be easier to scale<\/li>\n<\/ul>\n<h6 style=\"text-align: justify;\" align=\"left\"><b>Sameple gateway implementation running L3 protocol using openvswitch + tunnel<\/b><\/h6>\n<ul style=\"text-align: justify;\">\n<li>Intake using routing protocol<\/li>\n<li>Forward to openvswitch within the same host<\/li>\n<li>Forward using the flow created by controller<\/li>\n<li>I don\u2019t know appropriate equipment to do this<\/li>\n<li>Assuming we do this using servers, I would be sensitive about the forwarding capacity\n<ul>\n<li>I don\u2019t want to live a life constantly watching the load and distribute the load to more-specific (in a better way) route<\/li>\n<li>On the other hand, I also feel use of 10G NIC may be a workaround<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p style=\"text-align: justify;\" align=\"left\"><b>OpenContrail<\/b><\/p>\n<ul style=\"text-align: justify;\">\n<li>Use of equipment that can do MPLS\u00a0over\u00a0GRE as gateway router\n<ul>\n<li>Many to choose from, from Juniper, Cisco, Alaxala, etc.<\/li>\n<li>I expect major carriers make this mature to some extent<\/li>\n<\/ul>\n<\/li>\n<li>Controller acts as route reflector\n<ul>\n<li>Gateway router and vRouter both acts like PE router<\/li>\n<li>BGP is used to connect to gateway router<\/li>\n<li>Equivalent features are implemented on xmpp between vRouter<\/li>\n<\/ul>\n<\/li>\n<li>Additional features except for tunneling are implemented on edge router\n<ul>\n<li>There is no new features added to gateway routers, so it appears that equivalent implementation can be achieved using other manufacturers equipment<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h6 style=\"text-align: justify;\" align=\"left\"><b>Point #2: mss adjustment<\/b><\/h6>\n<p style=\"text-align: justify;\" align=\"left\">Since tunneling is used, I need to take into consideration where to do mss adjustment.\u00a0 For this issue as well, I believe use of OpenContrail has advantage for use in MTU1500 environment.<\/p>\n<ul style=\"text-align: justify;\">\n<li>OVS:\u00a0 You need to implement somewhere by yourself<\/li>\n<li>OpenContrail:\u00a0 vrouter adjusts mss looking at lower MTU<\/li>\n<\/ul>\n<h6 style=\"text-align: justify;\" align=\"left\"><b>Point #3: Can we use it small (without big tasks)<\/b><\/h6>\n<p style=\"text-align: justify;\" align=\"left\">I think it is important that it can be used sheer and small (without big tasks and investments).<\/p>\n<p style=\"text-align: justify;\" align=\"left\">Openvswitch and controller are separate products.\u00a0 From users point of view, they are easy to use.<\/p>\n<p style=\"text-align: justify;\" align=\"left\">OpenContrail requires python which uses ucs2 in order to build.\u00a0\u00a0 Virtualenv is needed in order to do build smoothly but there is no documents around that.\u00a0 Other challenge is that it expects the use through Openstack orchestrator or its equivalent and therefore it is very challenging to find some ways to use it simply by CLI only.<\/p>\n<div style=\"text-align: justify;\">\n<h6 align=\"left\"><b>Summary<\/b><\/h6>\n<\/div>\n<p style=\"text-align: justify;\" align=\"left\">I don\u2019t know yet to what extent OpenContrail implementation can be used in the real world, however, I feel the framework of vrf + proxy arp to be very advanced.\u00a0 At this time, use of OpenContrail is challenging in resolving dependencies and therefore you cannot try so instantly.\u00a0 For this we can resolve by us contributing in the OpenContrail.\u00a0 mac address is closed in the vRouter, so when you design pseudo L2 connection, you don\u2019t need to consider mac duplication and that is a benefit.<\/p>\n<p style=\"text-align: justify;\" align=\"left\">When you use routes dynamically created by controllers on openvswitch, when you encounter problems, resolving the problem is too difficult.\u00a0 I can envision difficult operation by inevitably seeing dynamically created flows.\u00a0 On the other hand, it has much larger advantage in ease of setting up environment or trial configuration.<\/p>\n<p style=\"text-align: justify;\" align=\"left\">I like OpenContrail better.\u00a0 I can sense some large system with dreams and hopes in OpenContrail so I would feel extremely happier if equivalent features can be realized in smaller implementation.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Mixi is Japanese SNS provider. Recently, Junpei Yoshino, an applications operations engineer at Mixi, wrote a blog about his thoughts on OpenContrail. The direct blog is posted at http:\/\/alpha.mixi.co.jp\/2013\/12038\/, but&#8230;<\/p>\n","protected":false},"author":468,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Mixi&#039;s Review of OpenContrail - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/i-studied-opencontrail\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Mixi&#039;s Review of OpenContrail - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"Mixi is Japanese SNS provider. Recently, Junpei Yoshino, an applications operations engineer at Mixi, wrote a blog about his thoughts on OpenContrail. The direct blog is posted at http:\/\/alpha.mixi.co.jp\/2013\/12038\/, but...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/i-studied-opencontrail\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2013-12-17T06:57:43+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2013\/12\/blogpost1015_image.png\" \/>\n<meta name=\"author\" content=\"Junpei Yoshino\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/i-studied-opencontrail\/\",\"url\":\"https:\/\/tungsten.io\/i-studied-opencontrail\/\",\"name\":\"Mixi's Review of OpenContrail - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2013-12-17T06:57:43+00:00\",\"dateModified\":\"2013-12-17T06:57:43+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/13484605f2b9cad984f32b43327c79fc\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/i-studied-opencontrail\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/13484605f2b9cad984f32b43327c79fc\",\"name\":\"Junpei Yoshino\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/58152e21ae3dbd4319c0ce01a6801f5f?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/58152e21ae3dbd4319c0ce01a6801f5f?s=96&d=mm&r=pg\",\"caption\":\"Junpei Yoshino\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Mixi's Review of OpenContrail - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/i-studied-opencontrail\/","og_locale":"en_US","og_type":"article","og_title":"Mixi's Review of OpenContrail - Tungsten Fabric","og_description":"Mixi is Japanese SNS provider. Recently, Junpei Yoshino, an applications operations engineer at Mixi, wrote a blog about his thoughts on OpenContrail. The direct blog is posted at http:\/\/alpha.mixi.co.jp\/2013\/12038\/, but...","og_url":"https:\/\/tungsten.io\/i-studied-opencontrail\/","og_site_name":"Tungsten Fabric","article_published_time":"2013-12-17T06:57:43+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2013\/12\/blogpost1015_image.png"}],"author":"Junpei Yoshino","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/i-studied-opencontrail\/","url":"https:\/\/tungsten.io\/i-studied-opencontrail\/","name":"Mixi's Review of OpenContrail - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2013-12-17T06:57:43+00:00","dateModified":"2013-12-17T06:57:43+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/13484605f2b9cad984f32b43327c79fc"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/i-studied-opencontrail\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/13484605f2b9cad984f32b43327c79fc","name":"Junpei Yoshino","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/58152e21ae3dbd4319c0ce01a6801f5f?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/58152e21ae3dbd4319c0ce01a6801f5f?s=96&d=mm&r=pg","caption":"Junpei Yoshino"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/1015"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/468"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=1015"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/1015\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=1015"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=1015"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=1015"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}