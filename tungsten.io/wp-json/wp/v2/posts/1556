{"id":1556,"date":"2014-06-07T23:35:23","date_gmt":"2014-06-07T23:35:23","guid":{"rendered":"http:\/\/opencontrail.org\/?p=1556"},"modified":"2014-06-07T23:35:23","modified_gmt":"2014-06-07T23:35:23","slug":"operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api","status":"publish","type":"post","link":"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/","title":{"rendered":"Operational State in the OpenContrail system:  UVE &#8211; User Visible Entities through Analytics API"},"content":{"rendered":"<p>Every element of the layered, horizontally scalable OpenContrail system has operational state to report. It\u2019s important to present this operation state to the user with the right abstractions that make the system simpler to understand and manage, and yet provide enough details when required.<\/p>\n<p>Consider the Virtual Network. There may be VM\u2019s in multiple compute nodes that are attached to the same virtual network. So, operational state about this VirtualNetwork exists on VRouterAgent processes on these multiple compute nodes.\u00a0 We want to present a consolidated view of this VirtualNetwork across all these compute nodes.<br \/>\n<!--more Read more...--><\/p>\n<p>But, wait \u2013 there\u2019s more. VRouterAgents on Compute nodes are not the only processes that report Operational State of a VirtualNetwork \u2013 the SchemaTransformer on the Config Node also reports which other Virtual Network the given VirtualNetwork is connected to. So, we actually need to present a consolidated view of this VirtualNetwork across the whole system \u2013 compute nodes and config nodes.<\/p>\n<p>In an earlier <a href=\"http:\/\/opencontrail.org\/sandesh-a-sdn-analytics-interface\/\">Blog post<\/a>, my colleague, Megh Bhatt, talked about Sandesh &#8211; OpenContrail\u2019s Analytics Interface. One of the features of Sandesh is the UVE mechanism, which allows processes to report their Operational State in a way that facilitates the aggregation of state across process types and process instances.\u00a0 This helps fulfill the promise of presenting the right abstractions for managing the OpenContrail system.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-5713 size-full\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/Anish_Mehta_Blogpost_Image1.png\" alt=\"Anish_Mehta_Blogpost_Image1\" width=\"960\" height=\"899\" data-id=\"5713\" \/><\/p>\n<p style=\"text-align: center;\"><strong>Figure 1 UVE Data Structure for Virtual Network<\/strong><\/p>\n<p><strong>Aggregating across Process Instances<\/strong><\/p>\n<p>Lets go back to the VirtualNetwork example<\/p>\n<p>Here is part of the SandeshUVE for Virtual Network, as reported by VRouterAgents:<\/p>\n<pre><code><span style=\"font-family: 'courier new', courier;\"> struct UveVirtualNetworkAgent {<\/span>\n<span style=\"font-family: 'courier new', courier;\"> 1: string name(key=\"ObjectVNTable\")<\/span>\n<span style=\"font-family: 'courier new', courier;\"> 2: optional bool deleted<\/span>\n<span style=\"font-family: 'courier new', courier;\"> 3: optional i32 total_acl_rules<\/span>\n<span style=\"font-family: 'courier new', courier;\"> 4: optional i32 in_bandwidth_usage (aggtype=\"sum\")<\/span>\n<span style=\"font-family: 'courier new', courier;\"> 5: optional list vm_list (aggtype=\"union\")<\/span>\n<span style=\"font-family: 'courier new', courier;\"> }<\/span>\n<span style=\"font-family: 'courier new', courier;\"> uve sandesh UveVirtualNetworkAgentTrace {<\/span>\n<span style=\"font-family: 'courier new', courier;\"> 1: UveVirtualNetworkAgent data;<\/span>\n<span style=\"font-family: 'courier new', courier;\"> }<\/span>\n <\/code><\/pre>\n<p>As explained in the Sandesh blog, all analytics information is recorded at the \u201cAnalytics Collector\u201d, which can be scaled horizontally. The processes in the OpenContrail system act as \u201cAnalytics Generators\u201d.\u00a0 They maintain a connection to one of the Collectors, and send information to it.<\/p>\n<p>VRouterAgents from multiple compute nodes are Generators who are sending this \u201cUveVirtualNetworkAgent \u201c structure to their Analytics Collector independently, but we are presenting a single instance of this structure, aggregated across all generators, via the Analytics REST API. The annotation \u201caggtype\u201d controls this aggregation on a per-attribute basis.<\/p>\n<ol>\n<li>No aggtype annotation<\/li>\n<\/ol>\n<p>For these attributes, we expect that all generators will send the same value. There is certain number of ACL rules configured on this VirtualNetwork, and all VRouterAgents should be operating with the same rules. If all these Generators are actually sending the same value, we will just display that value. Otherwise, we display each unique value along with a list of Generators reporting that unique value.<\/p>\n<ol start=\"2\">\n<li>aggtype=\u201dsum\u201d<\/li>\n<\/ol>\n<p>For these attributes (which much be integers), we will add together the values sent by each generator and present the sum.<\/p>\n<p>A VirtualNetwork is occupying some input bandwidth on each compute node where it had some VirtualMachines. We need to report the aggregate input bandwidth occupied by this VirtualNetwork across the entire system.<\/p>\n<ol start=\"3\">\n<li>aggtype=\u201dunion\u201d<\/li>\n<\/ol>\n<p>For these attributes (which much be lists of strings), we will treat each list as a set, take a union of the sets, and present the result.<\/p>\n<p>Each VRouterAgent has multiple VirtualMachines that are attached to this VirtualNetwork. We want to report a system-wide list of all VirtualMachines that are on this VirtualNetwork.<\/p>\n<p><strong>UVE Cache in the Generators<\/strong><\/p>\n<p>Generators report their Operational States to Collectors, which write themto a database. Based on user request, Operational State is presented out of the database via the Analytics REST API. This mechanism must tolerate component failures.<\/p>\n<p>We have High-Availability measure in place to handle failures in each of these layers of Analytics. Explaining all of these is beyond the scope of this discussion, but there is one mechanism in particular that applies to UVEs.<\/p>\n<p>Consider a case where the Collector loses contact with a Generator and at the same time, there are multiple UVEs to which this Generator may have been contributing some state. The Collector will in effect remove this Generator\u2019s contribution from all these UVEs.<\/p>\n<p>However, subsequently, this Generator might re-establish contact with this Collector, or with another Collector. The goal is to get this Generator\u2019s state information back. For this reason, we maintain a UVE Cache in each Generator. When a Generator connects to a Collector, the first step is to sync its UVE Cache with the Collector, so that we always reflect the correct, latest state for any connected Generator.<\/p>\n<p>The system-wide UVE state is accessible via the Analytics REST API, but the UVE cache of any Generator is accessible via IntrospectE.g.: (the VRouterAgent\u2019s Introspect port is 8085)<\/p>\n<p><a href=\"http:\/\/opencontrail.org\/wp-content\/uploads\/2014\/06\/Anish_Mehta_Blogpost_Image2.png\"><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5714\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/Anish_Mehta_Blogpost_Image2.png\" alt=\"Anish_Mehta_Blogpost_Image2\" width=\"972\" height=\"845\" data-id=\"5714\" \/><\/a><\/p>\n<p style=\"text-align: center;\"><strong>Figure 2 UVE Cache for Virtual Network on VRouterAgent<\/strong><\/p>\n<p><strong>Conclusion<\/strong><\/p>\n<p>All processes in the OpenContrail system act as \u201cAnalytics Generators\u201d.\u00a0 These generators maintain a robust and resilient connection to one of the Analytics Collectors, and they send their collector various kinds of information \u2013 Operational State, System Logs and Statistics (such as flow\/traffic information).<\/p>\n<p>UVE \u2013 User Visible Entities feature is the mechanism of OpenContrail that allows processes to report their Operational State in a way that facilitates the aggregation of state across process types and process instances. This mechanism also guarantees a consistent and updated view of Operational State in the face of system failures of Analytics Generators, Analytics Collectors and their connections.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Every element of the layered, horizontally scalable OpenContrail system has operational state to report. It\u2019s important to present this operation state to the user with the right abstractions that make&#8230;<\/p>\n","protected":false},"author":465,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Operational State in the OpenContrail system: UVE - User Visible Entities through Analytics API - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Operational State in the OpenContrail system: UVE - User Visible Entities through Analytics API - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"Every element of the layered, horizontally scalable OpenContrail system has operational state to report. It\u2019s important to present this operation state to the user with the right abstractions that make...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2014-06-07T23:35:23+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/Anish_Mehta_Blogpost_Image1.png\" \/>\n<meta name=\"author\" content=\"Anish Mehta\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/\",\"url\":\"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/\",\"name\":\"Operational State in the OpenContrail system: UVE - User Visible Entities through Analytics API - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2014-06-07T23:35:23+00:00\",\"dateModified\":\"2014-06-07T23:35:23+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\",\"name\":\"Anish Mehta\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"caption\":\"Anish Mehta\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Operational State in the OpenContrail system: UVE - User Visible Entities through Analytics API - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/","og_locale":"en_US","og_type":"article","og_title":"Operational State in the OpenContrail system: UVE - User Visible Entities through Analytics API - Tungsten Fabric","og_description":"Every element of the layered, horizontally scalable OpenContrail system has operational state to report. It\u2019s important to present this operation state to the user with the right abstractions that make...","og_url":"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/","og_site_name":"Tungsten Fabric","article_published_time":"2014-06-07T23:35:23+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/06\/Anish_Mehta_Blogpost_Image1.png"}],"author":"Anish Mehta","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/","url":"https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/","name":"Operational State in the OpenContrail system: UVE - User Visible Entities through Analytics API - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2014-06-07T23:35:23+00:00","dateModified":"2014-06-07T23:35:23+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689","name":"Anish Mehta","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","caption":"Anish Mehta"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/1556"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/465"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=1556"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/1556\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=1556"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=1556"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=1556"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}