{"id":5932,"date":"2015-01-06T20:25:31","date_gmt":"2015-01-07T04:25:31","guid":{"rendered":"http:\/\/www.opencontrail.org\/?p=5932"},"modified":"2015-01-06T20:25:31","modified_gmt":"2015-01-07T04:25:31","slug":"load-balancer-as-a-service-in-contrail","status":"publish","type":"post","link":"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/","title":{"rendered":"Load Balancer as a Service In Contrail"},"content":{"rendered":"<h4>Note: This blog is co-authored by Aniket Daptari from Juniper Networks Contrail team and Foucault De Bonneval, Product owner of SDN at CloudWatt, France.<\/h4>\n<h4><a name=\"_Toc280001894\"><\/a><a name=\"_Toc274230071\"><\/a><a name=\"_Toc274229465\"><\/a>Introduction:<\/h4>\n<p>&#8220;Load Balancing&#8221; is a very commonly deployed function in Virtualized Data Centers and Public\/Private clouds. A Load Balancer manages incoming traffic by distributing workloads across multiple servers and resources &#8211; automatically or on demand. In addition, Load Balancers also take care of detecting unhealthy instances and sending traffic only to the healthy instances. Several vendors today make Load Balancers in both physical and virtualized form factors. Each implementation comes with different feature sets and ways to configure them. However, there is a core set of features that most Load Balancers provide and that most users of Load Balancers use. OpenStack Neutron proposed LBaaS as an advanced service of Neutron, which allows a single set of APIs to be used to leverage Load Balancing functionality provided by a multitude of vendors. In short, this will allow the operators to use a common interface and move seamlessly between different load balancing technologies. This will also alleviate the pain of operators of having to familiarize themselves with the nitty gritties and specifics of different Load Balancer implementations.<\/p>\n<h4><a name=\"_Toc274230072\"><\/a><a name=\"_Toc274229466\"><\/a><a name=\"_Toc280001895\"><\/a>LBaaS use in a sovereign Public Cloud:<\/h4>\n<p>French Cloud Service Provider, <a href=\"https:\/\/www.cloudwatt.com\/fr\/\">Cloudwatt<\/a>, used OpenContrail to deploy a scalable sovereign Public Cloud in France. Cloudwatt delivered a live presentation during the recently concluded OpenStack Summit in Paris. Cloudwatt has designs that leverage the LBaaS functionality in particular and talk about it during their presentation. Please watch them talk about it here:<a href=\"http:\/\/youtu.be\/uRN-8iMqvIM\"> Scalable SDN in Public Cloud<\/a>.<\/p>\n<p>In short, the goal behind Cloudwatt\u2019s plans to use LBaaS is to make it seamless for Cloudwatt customers to use load balancing without having to manually configure the involved components. This drastically simplifies the customer\u2019s life, as they no longer need to know the minutiae of configuring Load balancers. Complex designs can be implemented with \u201cinternal-only\u201d or \u201chybrid internal-external\u201d LBaaS.<\/p>\n<p><strong>Understand<\/strong>: Customers do not need to know the minutiae,<br \/>\n<strong>Configure<\/strong>: Manual configuration is error-prone. LBaaS eliminates tedious and combersome manual configuration of Keepalived, HAProxy<br \/>\n<strong>Operate<\/strong>: By virtue of being API driven, Load Balancer deployment and operation is programmatic and automated. Similarly, responding to failures either in the infrastructure or in the application becomes similarly automated.<\/p>\n<h4><a name=\"_Toc280001896\"><\/a>OpenContrail implementation:<\/h4>\n<p>The release 1.20 LBaaS implementation in OpenContrail supports the following:<\/p>\n<ol>\n<li>Full proxy L7 loadbalancing of HTTP\/HTTPS\/TCP traffic to a pool of backend servers.<\/li>\n<li>Provide Health monitoring of the pool members using HTTP, TCP and PING.<\/li>\n<li>Association of Floating IP to the virtual-IP.<\/li>\n<li>Resiliency is integrated natively with active\/passive failover mode.<\/li>\n<\/ol>\n<p>In the release 1.20 of OpenContrail, support for using HA Proxy as a backend to the LBaaS APIs will be made available. In future releases, other backends will be added.<\/p>\n<p>The OpenContrail plugin will support the Neutron LBaaS API and will create the relevant virtual-IP, pool, members and health-monitor objects. When a pool is associated with a virtual-IP, the OpenContrail plugin will go on to create a service instance. The service scheduler will then instantiate a Linux network namespace on a randomly selected compute-node and spawns the active HA Proxy in the namespace. The service scheduler will then similarly instantiate a namespace on another (different) compute node to spawn the standby HA Proxy instance in the namespace. The properties of the Load Balancer object are passed to HA Proxy as command line parameters. Each VIP-Pool pair will result in two instances of HA Proxy being spawned as active-standby pair in two separate namespaces on two different compute-nodes. This is how High Availability of the Load Balancer is supported.\u00a0Both active and standby instances are identically configured. Switching mechanism is based on routing priority managed inside the overlay.<\/p>\n<p>In our implementation, the Load Balancer will proxy all connections to the VIPs thus functioning as a full-proxying Layer7 Load Balancer (as opposed to a L4 Load Balancer). A full-proxy treats the client and server as separate entities by implementing dual network stacks. In L7 load balancing, specific information within the requests can be used to balance the requests to the appropriate destination server end-point.<\/p>\n<p>Stay tuned to this space to watch for new capabilities in the future Contrail releases in this area.<\/p>\n<h4><a name=\"_Toc274230073\"><\/a><a name=\"_Toc274229467\"><\/a><a name=\"_Toc280001897\"><\/a>SSL Termination:<\/h4>\n<p>Modern Load Balancers now also offer SSL Termination. To understand SSL termination, let\u2019s take the case of a virtualized web application hosted in a Contrail managed cluster. A load balancer that manages the traffic to this web application hosts the VIP for this application. Clients initiate HTTPS connections to the VIP. Since the VIP is hosted on the Load balancer, the load balancer has the option to terminate the SSL connection, and initiate an HTTP connection to the web servers running in the load balancer pool. Terminating the SSL connection at the Load balancer allows for centralized certificate management, offloading SSL from the web server to the load balancer, allows HTTP traffic to be inspected by the DPI engines, alleviates the load on the web servers allowing webservers to focus on serving the HTTP requests. For SSL termination, SSL certificates need to be installed on all compute nodes and HA Proxy needs to be made aware of the location of the certificates.<\/p>\n<h4><a name=\"_Toc280001898\"><\/a>Typical Workflow:<\/h4>\n<p>The typical workflow is as follows:<\/p>\n<ol>\n<li>Create a pool, empty at first<\/li>\n<li>Add members to the pool<\/li>\n<li>Create a health monitor<\/li>\n<li>Associate health monitor with the pool<\/li>\n<li>Create Load Balancer object<\/li>\n<li>Listener (Unsupported)<\/li>\n<li>Add TLS certificate and key (Optional)<\/li>\n<li>Create a VIP<\/li>\n<li>Associate pool with VIP<\/li>\n<\/ol>\n<h4><a name=\"_Toc280001899\"><\/a><a name=\"_Toc274230074\"><\/a><a name=\"_Toc274229468\"><\/a>Example:<\/h4>\n<p>Figure 1:<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-5933\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/01\/LBaaS_Contrail_Image1.png\" alt=\"LBaaS_Contrail_Image1\" width=\"686\" height=\"298\" data-id=\"5933\" \/><\/p>\n<p>Figure 2:<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-5934\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/01\/LBaaS_Contrail_Image2.png\" alt=\"LBaaS_Contrail_Image2\" width=\"725\" height=\"502\" data-id=\"5934\" \/><\/p>\n<p>In the Figure 1 above, there is a cluster of compute nodes being managed by the Contrail controller. The Load balancer and the virtual-machines housing the application instances are all running on compute nodes on such a cluster being managed by the Contrail controller.<\/p>\n<p>At the very right is a pool whose members are instances of an application. Traffic to this application needs to be managed by distributing and balancing the workload across the various instances of the application. The pool members have endpoint IP addresses belonging to the Pool subnet. The pool subnet is behind an active-standby pair of Load Balancer instances.<\/p>\n<p>The Load Balancer is instantiated with a Virtual IP (VIP) of 20.1.1.1. Application virtual-machines are associated with a Pool Subnet 30.1.1.0\/24 and individual application virtual-machines obtain IP addresses from that subnet. When a client sends a request to the application directing traffic to the virtual-IP, the Load Balancer proxies the TCP connection on its virtual-IP. The Load Balancer terminates the incoming connection from the client and initiates a new one with one of the members of the pool. The member is picked based on one of following schemes as configured by the administrator:<\/p>\n<p><strong>Round Robin<\/strong>: Each pool-member is used in turns, according to their weights. Weights may be adjusted on the fly making this a dynamic scheme.<br \/>\n<strong>Least connection<\/strong>: Pool-member with the lowest number of connections receives the new connection. Well suited for protocols with long lasting sessions.<br \/>\n<strong>Source IP<\/strong>: The source IP address is hashed and divided by the total weight of the running servers to select the pool-member to serve the new request.<\/p>\n<p>Further, the Load Balancer is responsible for ensuring that only healthy application instances are part of the pool. To this end, the Load Balancer monitors the health of the pool members via one of the following probe schemes:<\/p>\n<p><strong>TCP<\/strong>: Load Balancer initiates TCP connections to the pool members for health checks.<br \/>\n<strong>HTTP<\/strong>: Load Balancer initiates HTTP requests after establishing TCP connection with the pool members.<br \/>\n<strong>PING<\/strong>: Load Balancer will use ICMP requests to the pool members for health checks.<\/p>\n<p>To instantiate the above picture, the relevant LBaaS API have to be invoked in the appropriate sequence.<\/p>\n<p>Watch the <a href=\"http:\/\/youtu.be\/bsgtlrgG7Ew\">video demonstration<\/a> of the LBaaS functionality.<\/p>\n<p><strong><span style=\"text-decoration: underline;\">1 Create Load Balancer<\/span><\/strong><\/p>\n<pre><span style=\"font-family: 'courier new', courier;\"><strong><span style=\"text-decoration: underline;\">Create VIP network<\/span><\/strong>\nneutron net-create vipnet\nneutron subnet-create \u2013-name vipsubnet vipnet 20.1.1.0\/24\n\n<strong><span style=\"text-decoration: underline;\">Create pool network<\/span><\/strong>\nneutron net-create poolnet\nneutron subnet-create --name poolsubnet poolnet 10.1.1.0\/24\n\n<strong><span style=\"text-decoration: underline;\">Create a pool for HTTP<\/span><\/strong>\nneutron lb-pool-create --lb-method ROUND_ROBIN --name mypool --protocol HTTP \n--subnet-id poolsubnet\n\n<strong><span style=\"text-decoration: underline;\">Add members to the pool<\/span><\/strong>\nneutron lb-member-create --address 10.1.1.2 --protocol-port 80 mypool\nneutron lb-member-create --address 10.1.1.3 --protocol-port 80 mypool\n\n<span style=\"text-decoration: underline;\">Create VIP for HTTP and associate to pool<\/span>\nneutron lb-vip-create --name myvip --protocol-port 80 --protocol HTTP\n--subnet-id vipsubnet mypool\n\n<strong><span style=\"text-decoration: underline;\">Associate the VIP to a floating IP<\/span><\/strong>\nneutron floatingip-create Public\nneutron floatingip-associate 66faf8de-54c5-4f52-8b65-84e5752653a3 a3527b7c-89c0-4f92-9315-2bd9ca5bcd32\n\n<\/span><\/pre>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"text-decoration: underline;\">2 Delete Load Balancer<\/span><\/strong><\/p>\n<pre><span style=\"font-family: 'courier new', courier;\"><span style=\"text-decoration: underline;\">Delete vip<\/span>\nneutron lb-vip-delete &lt;vip-uuid&gt;<strong><span style=\"text-decoration: underline;\">\u00a0<\/span><\/strong>\n\n<strong><span style=\"text-decoration: underline;\">Delete members from the pool<\/span><\/strong>\nneutron lb-member-delete &lt;member-uuid&gt;\n\n<span style=\"text-decoration: underline;\">Delete pool<\/span>\nneutron lb-pool-delete &lt;pool-uuid&gt;<\/span><\/pre>\n<p><strong><span style=\"text-decoration: underline;\">3 Associate and disassociate healthmonitor<\/span><\/strong><\/p>\n<pre><span style=\"font-family: 'courier new', courier;\"><span style=\"text-decoration: underline;\">Create healthmonitor<\/span>\nneutron lb-healthmonitor-create --delay 20 --timeout 10 --max-retries 3\n--type HTTP\n\n<strong><span style=\"text-decoration: underline;\">Associate healthmonitor<\/span><\/strong>\nneutron lb-healthmonitor-associate &lt;healthmonitor-uuid&gt; mypool\n\n<span style=\"text-decoration: underline;\">Disassociate healthmonitor<\/span>\nneutron lb-healthmonitor-disassociate &lt;healthmonitor-uuid&gt; mypool\n\n<span style=\"text-decoration: underline;\">Delete healthmonitor<\/span>\nneutron lb-healthmonitor-delete &lt;healthmonitor-uuid&gt;<\/span><\/pre>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"text-decoration: underline;\">4 Configure SSL VIP with HTTP backend pool<\/span><\/strong><\/p>\n<pre><span style=\"font-family: 'courier new', courier;\"><span style=\"text-decoration: underline;\">Copy certificate to all compute nodes<\/span>\nscp ssl_certificate.pem &lt;compute-node-ip&gt; &lt;certificate-path&gt;<strong><span style=\"text-decoration: underline;\">\u00a0<\/span><\/strong>\n\n<strong><span style=\"text-decoration: underline;\">Update \/etc\/contrail\/contrail-vrouter-agent.conf<\/span><\/strong>\n# SSL certificate path haproxy\nhaproxy_ssl_cert_path=&lt;certificate-path&gt;\n\nRestart contrail-vrouter-agent\nservice contrail-vrouter-agent restart\n\n<span style=\"text-decoration: underline;\">Create VIP for port 443 (SSL)<\/span>\nneutron lb-vip-create --name myvip --protocol-port 443 --protocol HTTP --subnet-id vipsubnet mypool\n\n<\/span><\/pre>\n<h4><a name=\"_Toc280001900\"><\/a><a name=\"_Toc274230075\"><\/a><a name=\"_Toc274229469\"><\/a>Note:<\/h4>\n<p>Compute Nodes where the HAProxy instances will be spawned are chosen at random. It is therefore necessary for all compute nodes to have the HAProxy binaries. Juniper Contrail\u2019s provisioning scripts will take care of installing the HAProxy binaries in all the compute nodes in question.<\/p>\n<h4><a name=\"_Toc274230076\"><\/a><a name=\"_Toc280001901\"><\/a>References:<\/h4>\n<p><a href=\"http:\/\/www.haproxy.org\/\">http:\/\/www.haproxy.org\/<\/a><br \/>\n<a href=\"https:\/\/wiki.openstack.org\/wiki\/Neutron\/LBaaS\/Glossary\">https:\/\/wiki.openstack.org\/wiki\/Neutron\/LBaaS\/Glossary<\/a><br \/>\n<a href=\"http:\/\/www.businesscloudnews.com\/2014\/07\/29\/cloudwatt-deploys-open-source-sdn-controller\/\">http:\/\/www.businesscloudnews.com\/2014\/07\/29\/cloudwatt-deploys-open-source-sdn-controller\/<\/a><\/p>\n<h4><a name=\"_Toc280001902\"><\/a>Appendix:<\/h4>\n<p>Appendix A: Service Template for LB (HAProxy) Service Template<br \/>\n<img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-5935\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/01\/LBaaS_Contrail_Image3.png\" alt=\"LBaaS_Contrail_Image3\" width=\"841\" height=\"261\" data-id=\"5935\" \/><\/p>\n<h4>Appendix B: Details of LB (HAProxy) Service Instance<\/h4>\n<p>http:\/\/&lt;Controller-IP&gt;:8081\/analytics\/uves\/service-instance\/default-domain:demo:769c9864-3745-493d-a3f0-2790d9e585b6?flat<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">{\n UveSvcInstanceConfig: \u2028{\n status: \"CREATE\",\n vm_list: \u2028[\n \u2028{\n ha: \"active: 200\",\n uuid: \"6cffa4c6-1b3a-45be-b9af-5dbe23d52b9f\",\n vr_name: \"compute-node-2\"\n },\u2028{\n ha: \"standby: 100\",\n uuid: \"4bf23df5-cf91-4710-bd9a-0823707fb616\",\n vr_name: \"compute-node-3\"\n }\n ],\n create_ts: 1413336206921338,\n st_name: \"default-domain:haproxy-loadbalancer-template\"\n }\n}<\/span><\/pre>\n<p>The UUID listed under \u201cvm_list\u201d is the UUID associated with the net-namespace.<\/p>\n<p>If you issue \u201cip netns list\u201d, you will see a combination of the UUIDs associated with the service instance and the namespace:<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">root@single-node-253:~# ip netns list\nvrouter-6cffa4c6-1b3a-45be-b9af-5dbe23d52b9f:769c9864-3745-493d-a3f0-2790d9e585b6<\/span><\/pre>\n<h3>Appendix C: Generated HA Proxy Config:<\/h3>\n<p>&#8220;\/var\/lib\/contrail\/loadbalancer\/769c9864-3745-493d-a3f0-2790d9e585b6\/etc\/haproxy\/haproxy.cfg&#8221;<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">global\n   daemon\n   user nobody\n   group nogroup\ndefaults\n   log global\n   retries 3\n   option redispatch\n   timeout connect 5000\n   timeout client 50000\n   timeout server 50000\nlisten contrail-config-stats :5937\n   mode http\n   stats enable\n   stats uri \/\n   stats auth haproxy:contrail123\nfrontend 10f8c207-065a-4a65-90bb-6d482d681709\n   bind 20.1.1.2:80\n   mode http\n   default_backend 769c9864-3745-493d-a3f0-2790d9e585b6\nbackend 769c9864-3745-493d-a3f0-2790d9e585b6\n   mode http\n   balance roundrobin\n   server 29aebe4e-89c6-4924-927f-49003f3796b9 10.1.1.3:80 weight 1\n   server 7f450ab8-2669-4d62-a881-d4712d8713a2 10.1.1.2:80 weight 1<\/span><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Note: This blog is co-authored by Aniket Daptari from Juniper Networks Contrail team and Foucault De Bonneval, Product owner of SDN at CloudWatt, France. Introduction: &#8220;Load Balancing&#8221; is a very&#8230;<\/p>\n","protected":false},"author":483,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[14,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Load Balancer as a Service In Contrail - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Load Balancer as a Service In Contrail - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"Note: This blog is co-authored by Aniket Daptari from Juniper Networks Contrail team and Foucault De Bonneval, Product owner of SDN at CloudWatt, France. Introduction: &#8220;Load Balancing&#8221; is a very...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2015-01-07T04:25:31+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/01\/LBaaS_Contrail_Image1.png\" \/>\n<meta name=\"author\" content=\"Aniket Daptari\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/\",\"url\":\"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/\",\"name\":\"Load Balancer as a Service In Contrail - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2015-01-07T04:25:31+00:00\",\"dateModified\":\"2015-01-07T04:25:31+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648\",\"name\":\"Aniket Daptari\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg\",\"caption\":\"Aniket Daptari\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Load Balancer as a Service In Contrail - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/","og_locale":"en_US","og_type":"article","og_title":"Load Balancer as a Service In Contrail - Tungsten Fabric","og_description":"Note: This blog is co-authored by Aniket Daptari from Juniper Networks Contrail team and Foucault De Bonneval, Product owner of SDN at CloudWatt, France. Introduction: &#8220;Load Balancing&#8221; is a very...","og_url":"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/","og_site_name":"Tungsten Fabric","article_published_time":"2015-01-07T04:25:31+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2015\/01\/LBaaS_Contrail_Image1.png"}],"author":"Aniket Daptari","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/","url":"https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/","name":"Load Balancer as a Service In Contrail - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2015-01-07T04:25:31+00:00","dateModified":"2015-01-07T04:25:31+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/load-balancer-as-a-service-in-contrail\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648","name":"Aniket Daptari","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg","caption":"Aniket Daptari"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/5932"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/483"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=5932"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/5932\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=5932"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=5932"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=5932"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}