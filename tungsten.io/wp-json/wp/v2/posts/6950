{"id":6950,"date":"2016-03-24T22:20:06","date_gmt":"2016-03-25T05:20:06","guid":{"rendered":"http:\/\/www.opencontrail.org\/?p=6950"},"modified":"2016-03-24T22:20:06","modified_gmt":"2016-03-25T05:20:06","slug":"openstack-neutron-ipv6-support-in-opencontrail-sdn","status":"publish","type":"post","link":"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/","title":{"rendered":"OpenStack Neutron IPv6 support in OpenContrail SDN"},"content":{"rendered":"<p><em>This is a guest blog from tcpCloud, authored by Marek Celoud &amp; Jakub Pavlik (tcp cloud engineers). To see the original post,<a href=\"http:\/\/www.tcpcloud.eu\/en\/blog\/2016\/03\/23\/openstack-neutron-ipv6-support-opencontrail-sdn\/\" target=\"_blank\">click here<\/a>.<\/em><\/p>\n<p>As private cloud (primary based on OpenStack) deployers and integrators lots of customer ask as about support of IPv6. Most of our deployments run on OpenContrail SDN&amp;NFV. Reasons are described in our previous blogs (<a class=\"reference external\" href=\"http:\/\/www.tcpcloud.eu\/en\/blog\/2015\/07\/13\/opencontrail-sdn-lab-testing-1-tor-switches-ovsdb\/\">http:\/\/www.tcpcloud.eu\/en\/blog\/2015\/07\/13\/opencontrail-sdn-lab-testing-1-tor-switches-ovsdb\/<\/a>) . OpenContrail SDN supports IPv6 for quite long, but there is not so many real tests. Therefore we decided to share procedure how we configured and used IPv6 in OpenStack.<\/p>\n<p>This short blog desribes support of IPv6 in OpenStack using Neutron plugin for SDN\/NFV &#8211; OpenContrail.<\/p>\n<p>With cloud deployments there is significant growth of need for public IP addresses. These deployments are facing problems due to lack of IPv4 addresses. One of the solutions is to migrate to public IPv6.<\/p>\n<p>We start with capability of IPv6 for internal communication between virtual machines within same virtal network and across different virtual network. Then we show how to expand IPv6 public addresses to external world. In our case we use Juniper MX routers as cloud gateway.<\/p>\n<h2>Creating IPv6 network<\/h2>\n<p>We need to consider few things when creating IPv6 virtual network. First one is adding also IPv4 subnet, because without IPv4 address instance can not connect to nova metadata api. Cloud images are built to use cloud-init to connect to API on 169.254.169.254:80 address. So if you create network without IPv4 subnet, you will not receive metadata to your instance. Second consideration is whether to you want to go to internet with your IPv6 capable instances. There is currently problem with IPv6 floating IP pool, so if you want to expand to external world, you need to boot to network with associated route target.<\/p>\n<p>We first create private IPv6 network for demonstation.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-6951 aligncenter\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv61.png\" alt=\"ipv61\" width=\"967\" height=\"514\" data-id=\"6951\" \/><\/p>\n<p>When the network is created we can boot instances. We will boot 2 of them to demonstrate functional communication. You will probably need to modify network interface configuration, because there is not enabled dhcp for IPv6. For nonpreemptive recieve you can use:<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">#dhclient -6<\/span><\/pre>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-6953 aligncenter\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv63.png\" alt=\"ipv63\" width=\"559\" height=\"176\" data-id=\"6953\" \/><\/p>\n<p>As you can see, you have both IPv4 and IPv6 address associated with interface of instance.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-6954\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv64.png\" alt=\"ipv64\" width=\"815\" height=\"241\" data-id=\"6954\" \/><\/p>\n<p>Before testing communication, we need to modify security groups to enable traffic. For testing purposes we will enable everything.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignleft size-full wp-image-6952\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv62.png\" alt=\"ipv62\" width=\"1855\" height=\"92\" data-id=\"6952\" \/><\/p>\n<p>We choose ubuntu-ipv6-1 from instance list and try to ping instance ubuntu-ipv6-2 with fd00::3 IPv6 address.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-6955 aligncenter\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv65.png\" alt=\"ipv65\" width=\"691\" height=\"149\" data-id=\"6955\" \/><\/p>\n<p>As you can see, we are now able to ping other instance.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"size-full wp-image-6957 aligncenter\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv66.png\" alt=\"ipv66\" width=\"514\" height=\"203\" data-id=\"6957\" \/><\/p>\n<p>This capability is nice, but not very useful without connecting to external world. We will create route with associated route target to expand routes to Juniper MX routers via BGP. In the picture below is sample architecture. There is one VRF CLOUD-INET created on each of MX routers. The route target associated with this VRF matches route target added to virtual network in Contrail. In the picture is demonstrated both IPv4 and IPv6 addresses propagated to same VRF. There is also INET virtual-router, that is connected to VRF via lt tunnel interfaces running ospf and ospf3. From this virtual-router is aggregated default route ::\/0 from all internet routes from upstream EBGP.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-6956\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv66-expanded.png\" alt=\"ipv66 expanded\" width=\"617\" height=\"883\" data-id=\"6956\" \/><\/p>\n<p>There are few things to configure on MX routers to enable IPv6 traffic from cloud. First is enabling ipv6 tunneling through mpls tunnels.<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">protocols {\n    mpls {\n        ipv6-tunneling;\n        interface all;\n        }<\/span><\/pre>\n<p>It is also good practice to filter what routes you export and import to and from cloud. We only need default route present in cloud. And we also want to filter only IPv6 addresses to be imported from Contrail, because of IPv4 pool created with IPv6 virtual network.<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">\npolicy-statement CLOUD-INET-EXPORT {\n    term FROM-MX-IPV6 {\n        from {\n            protocol ospf3;\n            route-filter ::\/0 exact;\n        }\n        then {\n            community add CLOUD-INET-EXPORT-COMMUNITY;\n            accept;\n        }\n    }\n    term LAST {\n        then reject;\n    }\n}\npolicy-statement CLOUD-INET-IMPORT {\n    term FROM-CONTRAIL-IPV6 {\n        from {\n            family inet6;\n            community CLOUD-INET-IMPORT-COMMUNITY;\n            route-filter 2a06:f6c0::\/64 orlonger;\n        }\n        then accept;\n    }\n    term LAST {\n        then reject;\n    }\n}\ncommunity CLOUD-INET-EXPORT-COMMUNITY members target:64513:10;\ncommunity CLOUD-INET-IMPORT-COMMUNITY members target:64513:10;\n<\/span><\/pre>\n<p>So now we create network 2a06:f6c0::\/64 and we associate route target 64513:10 to this network. We can also make it shared so all tenants can boot in this network. Once we create instance to this network, there is already routing information in MX routing table.<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">\n# run show route table CLOUD-INET.inet6.0\n\nCLOUD-INET.inet6.0: 8 destinations, 9 routes (8 active, 0 holddown, 0 hidden)\n+ = Active Route, - = Last Active, * = Both\n\n::\/0               *[OSPF3\/150] 20:37:13, metric 0, tag 0\n                    &gt; to fe80::6687:8800:0:2f7 via lt-0\/0\/0.3\n2a06:f6c0::3\/128   *[BGP\/170] 00:00:15, localpref 100, from 10.0.106.84\n                      AS path: ?, validation-state: unverified\n                    &gt; via gr-0\/0\/0.32789, Push 1046\n                    [BGP\/170] 00:00:15, localpref 100, from 10.0.106.85\n                      AS path: ?, validation-state: unverified\n                    &gt; via gr-0\/0\/0.32789, Push 1046<\/span><\/pre>\n<p>We can also verify that default route is propagated by ispecting routing tables in Contrail.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-6959\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv610.png\" alt=\"ipv610\" width=\"1728\" height=\"696\" data-id=\"6959\" \/><\/p>\n<p>When we verify that instance have public IPv6 address, we can try to access internet.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-6958\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv67.png\" alt=\"ipv67\" width=\"810\" height=\"240\" data-id=\"6958\" \/><\/p>\n<div id=\"creating-ipv6-network\" class=\"section\">\n<p>ping google<\/p>\n<\/div>\n<div id=\"conclusion\" class=\"section\">\n<h2>Conclusion<\/h2>\n<p>We proved that OpenContrail SDN solution is fully IPv6 capable with cloud platform OpenStack for private and public communication and communicate directly with edge routers as Juniper MX, Cisco ASR, etc.<\/p>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This is a guest blog from tcpCloud, authored by Marek Celoud &amp; Jakub Pavlik (tcp cloud engineers). To see the original post,click here. As private cloud (primary based on OpenStack)&#8230;<\/p>\n","protected":false},"author":479,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[13,18,8],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>OpenStack Neutron IPv6 support in OpenContrail SDN - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"OpenStack Neutron IPv6 support in OpenContrail SDN - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"This is a guest blog from tcpCloud, authored by Marek Celoud &amp; Jakub Pavlik (tcp cloud engineers). To see the original post,click here. As private cloud (primary based on OpenStack)...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2016-03-25T05:20:06+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv61.png\" \/>\n<meta name=\"author\" content=\"Jakub Pavlik\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/\",\"url\":\"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/\",\"name\":\"OpenStack Neutron IPv6 support in OpenContrail SDN - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2016-03-25T05:20:06+00:00\",\"dateModified\":\"2016-03-25T05:20:06+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/fa242938c01e9144363e911cf07ecd75\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/fa242938c01e9144363e911cf07ecd75\",\"name\":\"Jakub Pavlik\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/0fe1e918e30d022ef4c9895cc59c9d7f?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/0fe1e918e30d022ef4c9895cc59c9d7f?s=96&d=mm&r=pg\",\"caption\":\"Jakub Pavlik\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"OpenStack Neutron IPv6 support in OpenContrail SDN - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/","og_locale":"en_US","og_type":"article","og_title":"OpenStack Neutron IPv6 support in OpenContrail SDN - Tungsten Fabric","og_description":"This is a guest blog from tcpCloud, authored by Marek Celoud &amp; Jakub Pavlik (tcp cloud engineers). To see the original post,click here. As private cloud (primary based on OpenStack)...","og_url":"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/","og_site_name":"Tungsten Fabric","article_published_time":"2016-03-25T05:20:06+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2016\/03\/ipv61.png"}],"author":"Jakub Pavlik","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/","url":"https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/","name":"OpenStack Neutron IPv6 support in OpenContrail SDN - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2016-03-25T05:20:06+00:00","dateModified":"2016-03-25T05:20:06+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/fa242938c01e9144363e911cf07ecd75"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/openstack-neutron-ipv6-support-in-opencontrail-sdn\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/fa242938c01e9144363e911cf07ecd75","name":"Jakub Pavlik","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/0fe1e918e30d022ef4c9895cc59c9d7f?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/0fe1e918e30d022ef4c9895cc59c9d7f?s=96&d=mm&r=pg","caption":"Jakub Pavlik"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/6950"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/479"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=6950"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/6950\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=6950"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=6950"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=6950"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}