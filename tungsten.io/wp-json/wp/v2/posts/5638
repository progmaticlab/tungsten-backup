{"id":5638,"date":"2014-11-03T17:26:05","date_gmt":"2014-11-04T01:26:05","guid":{"rendered":"http:\/\/www.opencontrail.org\/?p=5638"},"modified":"2014-11-03T17:26:05","modified_gmt":"2014-11-04T01:26:05","slug":"overlay-to-physical-network-correlation","status":"publish","type":"post","link":"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/","title":{"rendered":"A Tale of Two Layers &#8211; Correlating Overlay and Physical Network Data for better OpenStack Network Analytics"},"content":{"rendered":"<h4>For an overview of this blogpost, check the below video. Also you can find similar videos in the <a title=\"OpenContrail Videos\" href=\"http:\/\/www.opencontrail.org\/videos\/\">Video section<\/a> of this site.<\/h4>\n<p style=\"text-align: center;\">[video_lightbox_youtube video_id=&#8221;B8aHoY&#8211;1Zs&#8221; width=&#8221;720&#8243; height=&#8221;540&#8243; auto_thumb=&#8221;1&#8243;]\n<p>Openstack networking can help us deliver the benefits of network virtualization to applications &#8211; lower lead times for deploying services, better resilience to failures and easier scaling. But virtualization presents a new paradigm for visibilty and debugging of network elements, physical and virtual.\u00a0 Applications live their lives in the overlay network. Sometimes they face connectivity, latency and other performance problems. Is it a network problem? How do we isolate it and solve it?<\/p>\n<p>To do this, we really need to map what\u2019s happening in the overlay network with the networking entities that are operating in the physical network. In this presentation, we will demonstrate an Analytics application using the OpenContrail system\u2019s open API\u2019s to look at a traffic flow in the overlay, and examine what physical routers and network interfaces it is traversing in the underlay. This can be co-related to interface statistics and other health indications in the underlay network.\u00a0 We can also look at the physical routers being traversed by tunnels that go across from one underlay entry point to another. Correlating physical and virtual network information is these ways is a big step towards identifying, solving and even anticipating the connectivity problems of applications in OpenStack.<\/p>\n<h4><strong>Collecting Information from Physical Nodes<\/strong><\/h4>\n<p>Discovered topology information and interface statistics are ingested via SNMP.\u00a0 We rely on lldpTable, ipMib, ifTable and ifXTable. \u00a0Each physical router is represented by the pRouter UVE (see <a href=\"http:\/\/opencontrail.org\/operational-state-in-the-opencontrail-system-uve-user-visible-entities-through-analytics-api\/\">Operational State in the OpenContrail system: UVE \u2013 User Visible Entities through Analytics API<\/a>), which exposes these MIBs. We also correlate this information against vRouter UVEs to present physical topology in the pRouter UVE &#8211; a list of all other pRouters and vRouters that are connected this pRouter, and the links between them.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone size-full wp-image-5639\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/11\/overlay_to_physical_blogpost_image1.png\" alt=\"overlay_to_physical_blogpost_image1\" width=\"553\" height=\"736\" data-id=\"5639\" \/><\/p>\n<p>OpenContrail Analytics\u2019 collector can take in flow information from physical nodes in the form of sFlow and IPFIX. The collected records can then be accessed via the Query REST API (see <a href=\"http:\/\/opencontrail.org\/opencontrail-analytics-query-api\/\">OpenContrail Analytics Query API<\/a>) , with the following schema:<\/p>\n<p><a href=\"http:\/\/127.0.0.1:8081\/analytics\/table\/StatTable.UFlowData.flow\/schema\">http:\/\/127.0.0.1:8081\/analytics\/table\/StatTable.UFlowData.flow\/schema<\/a><\/p>\n<h4>\u00a0<strong>Physical Topology<\/strong><\/h4>\n<p>Using the information listed above, the OpenContrail UI presents an interactive view of the Phyisical Topology of the network. Along with the switches\/routers, we display details about the links between them, including traffic statistics along that link.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-5640\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/11\/overlay_to_physical_blogpost_image2.png\" alt=\"overlay_to_physical_blogpost_image2\" width=\"800\" height=\"640\" data-id=\"5640\" \/><\/p>\n<p>For TORs, we show the vRouters hanging off them, and the VM instances that run on those vRouters. The interfaces that connect them and their traffic statistics can be shown as well.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-5641\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/11\/overlay_to_physical_blogpost_image3.png\" alt=\"overlay_to_physical_blogpost_image3\" width=\"800\" height=\"602\" data-id=\"5641\" \/><\/p>\n<h4><strong>Search Flows<\/strong><\/h4>\n<p>We can list historical overlay flows records seen on the system, according to the flow parameters used for REST API Flow Record queries, i.e. Source-VN\/Source-IP, Dest-VN\/Dest-IP, vRouter, Protocol\/Source-Port and Protocol\/Dest-Port.<\/p>\n<p>Then we can map these flows onto the Physical Nodes to see what path they took. The underlay flow parameters used for a given overlay flow depend on the type of encapsulation being used. MPLS-over-UDP and VXLAN encapsulations try to add entropy (for better load-balancing between paths) by varying the UDP source-port based on overlay flow parameters.\u00a0 Multiple overlay flows are expected to hash onto the same underlay flow.\u00a0 When looking at sFlow or IPFIX information of underlay flows to infer the path of a given overlay flow, we can exploit all samples of the underlay flow, even if they were actually due to other overlay flows.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-5642\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/11\/overlay_to_physical_blogpost_image4.png\" alt=\"overlay_to_physical_blogpost_image4\" width=\"800\" height=\"524\" data-id=\"5642\" \/><\/p>\n<h4><strong>Trace Path<\/strong><\/h4>\n<p>The vRouterAgent supports an active probe-based Trace Path mechanism via its HTTP Introspect API.<\/p>\n<p><a href=\"http:\/\/127.0.0.1:8085\/diag.xml#Snh_TraceRouteReq\">http:\/\/127.0.0.1:8085\/diag.xml#Snh_TraceRouteReq<\/a><\/p>\n<p>The UI displays all recently active overlay flows for a given vRouter or Virtual Machine. We can then trace the corresponding underlay flow using active probes that have the same outer header as regular packets of this underlay flow.\u00a0 The active probes are sent out using escalating TTLs, to elicit ICMP packets from the physical routers that the underlay flow would traverse. The destination vRouter detects this as a special probe packet based on the inner header, and replies back to the originating vRouter, thus completing the illumination of the path.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"alignnone wp-image-5643\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/11\/overlay_to_physical_blogpost_image5.png\" alt=\"overlay_to_physical_blogpost_image5\" width=\"800\" height=\"444\" data-id=\"5643\" \/><\/p>\n<h4><strong>Conclusion<\/strong><\/h4>\n<p>OpenContrail Analytics exposes detailed information about overlay flows in the network, and operational information about vRouters. We have also seen the physical network information that can be ingested into OpenContrail Analytics and presented northbound. Using all these APIs, an application can be built that displays the physical topology, and shows the physical path taken by an overlay flow. We have built one such application \u2013 other applications can be built on top of these APIs as well.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>For an overview of this blogpost, check the below video. Also you can find similar videos in the Video section of this site. [video_lightbox_youtube video_id=&#8221;B8aHoY&#8211;1Zs&#8221; width=&#8221;720&#8243; height=&#8221;540&#8243; auto_thumb=&#8221;1&#8243;] Openstack networking&#8230;<\/p>\n","protected":false},"author":465,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>A Tale of Two Layers - Correlating Overlay and Physical Network Data for better OpenStack Network Analytics - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"A Tale of Two Layers - Correlating Overlay and Physical Network Data for better OpenStack Network Analytics - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"For an overview of this blogpost, check the below video. Also you can find similar videos in the Video section of this site. [video_lightbox_youtube video_id=&#8221;B8aHoY&#8211;1Zs&#8221; width=&#8221;720&#8243; height=&#8221;540&#8243; auto_thumb=&#8221;1&#8243;] Openstack networking...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2014-11-04T01:26:05+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/11\/overlay_to_physical_blogpost_image1.png\" \/>\n<meta name=\"author\" content=\"Anish Mehta\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/\",\"url\":\"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/\",\"name\":\"A Tale of Two Layers - Correlating Overlay and Physical Network Data for better OpenStack Network Analytics - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2014-11-04T01:26:05+00:00\",\"dateModified\":\"2014-11-04T01:26:05+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689\",\"name\":\"Anish Mehta\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg\",\"caption\":\"Anish Mehta\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"A Tale of Two Layers - Correlating Overlay and Physical Network Data for better OpenStack Network Analytics - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/","og_locale":"en_US","og_type":"article","og_title":"A Tale of Two Layers - Correlating Overlay and Physical Network Data for better OpenStack Network Analytics - Tungsten Fabric","og_description":"For an overview of this blogpost, check the below video. Also you can find similar videos in the Video section of this site. [video_lightbox_youtube video_id=&#8221;B8aHoY&#8211;1Zs&#8221; width=&#8221;720&#8243; height=&#8221;540&#8243; auto_thumb=&#8221;1&#8243;] Openstack networking...","og_url":"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/","og_site_name":"Tungsten Fabric","article_published_time":"2014-11-04T01:26:05+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2014\/11\/overlay_to_physical_blogpost_image1.png"}],"author":"Anish Mehta","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/","url":"https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/","name":"A Tale of Two Layers - Correlating Overlay and Physical Network Data for better OpenStack Network Analytics - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2014-11-04T01:26:05+00:00","dateModified":"2014-11-04T01:26:05+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/overlay-to-physical-network-correlation\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/444baeeb4500c1d4e511527c6f2da689","name":"Anish Mehta","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/b7768e1843852e0ff35acc4c42a5fc3a?s=96&d=mm&r=pg","caption":"Anish Mehta"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/5638"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/465"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=5638"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/5638\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=5638"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=5638"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=5638"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}