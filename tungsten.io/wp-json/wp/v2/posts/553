{"id":553,"date":"2013-10-02T22:49:05","date_gmt":"2013-10-02T22:49:05","guid":{"rendered":"http:\/\/opencontrail.org\/?p=553"},"modified":"2013-10-02T22:49:05","modified_gmt":"2013-10-02T22:49:05","slug":"configuration-as-a-graph","status":"publish","type":"post","link":"https:\/\/tungsten.io\/configuration-as-a-graph\/","title":{"rendered":"Configuration as a graph"},"content":{"rendered":"<p>I had the privilege to be part of the team that built Juniper\u2019s EX switches; it was a fun experience as building something from scratch typically is. One episode I vividly remember is a week long discussion as to whether the new switch software should, in its configuration, list the interfaces and the features enabled in them (as Cisco devices typically do); or be driven by the feature configuration and list the interfaces the feature is enabled on (as juniper routers typically do).<\/p>\n<p>On one side of the argument, listing the features under the interfaces can give one an immediate outlook of what to expect for that interface; besides if one is building a switch it is hard to ignore Cisco\u2019s enterprise market share and how familiar networking people are with that model. On the other side of the argument, Juniper\u2019s configuration model allows the operator to quickly understand what is going on for each feature: a protocol such as OSPF for instance.<br \/>\n<!--more Read more...--><\/p>\n<p>It is very easy for people to argue for hours about such a simple thing; one can\u2019t conclusively prove either viewpoint to be right or wrong. After a few meetings with heated arguments we ended up with a compromised solution: we would do both. Switching functionality would be configurable under the interface as well as under a configuration stanza specific to the feature. Once the product shipped, we ended up hearing many comments on how it was confusing to have both ways to do it. I\u2019m convinced we would have ended up with a similar number of complaints had we chosen one approach or the other. There are scenarios where there simply is no perfect answer.<\/p>\n<p>I\u2019m quite happy with the fact that on my current project (<a href=\"http:\/\/www.opencontrail.org\">http:\/\/www.opencontrail.org<\/a>) we have neither model. Instead configuration is expressed as a graph of objects. So far i really like the outcome.<\/p>\n<p>When we started working on network virtualization at contrail we took the approach that we should avoid inventing new things as much as possible. For configuration management we wanted a standards based approach that could allow for multiple producers to contribute information to as well as multiple consumers. We were looking for interoperability and we knew that we needed to have a configuration model that could be sharable by multiple independent systems.<\/p>\n<p>The only reusable tool we found was <a href=\"http:\/\/www.if-map.org\">IF-MAP<\/a>. IF-MAP was originally targeted at the \u201cidentity\u201d space. In a campus network, it is often desirable to be able to associate an IP address with the corresponding user-id. Users can enter the network from a wiring-closet switch, wireless or VPN concentrator. All devices that thread authentication differently and for which enterprise wants the ability to choose different vendors. IF-MAP has been quite successful in this space, supporting not just IP and user association but the ability to provide additional properties and policy configuration.<\/p>\n<p>In the network virtualization space, the data-model is necessarily different. The concepts however are very similar. In on-demand infrastructure deployments the primary entities are virtual-machines and their respective interfaces vs users and devices. But similarly, interfaces can be associated with virtual-networks and there is the need to express the desired outcome as policy statements, for example: a VM in network blue can establish an http session with a VM on network red.<\/p>\n<p>In the OpenContrail system, virtual-machine, interfaces and virtual-networks are IF-MAP identifiers. IF-MAP \u201cmetadata\u201d can be associated with either an identifier or with two identifiers forming an edge in the graph. We use the metadata, for instance, in order to define the policy that determines how traffic can flow between networks. Two virtual-networks can be connected by metadata that defines what traffic is allowed to flow. From that information we later extract both access-control lists that apply to a specific \u201cport\u201d as well as the reachability information to be presented to a VM interface.<\/p>\n<p>The data-model is something that keeps expanding as the functionality of the system increases; as such one needs to automate as much as possible the mechanical process of adding new attributes or identifiers. For that reason we built a <a href=\"https:\/\/github.com\/Juniper\/contrail-generateds\">code generator<\/a>\u00a0that takes as input an XML schema definition file and can output that code that is necessary to:<\/p>\n<p style=\"padding-left: 30px;\">&#8211; Provide a REST API for the data-model in;<\/p>\n<p style=\"padding-left: 30px;\">&#8211; Decode the corresponding IF-MAP objects.<\/p>\n<p>In terms of the REST API, the generator is able to produce both python and Java client libraries as well as the server side code (in python). The server code that is manually coded is agnostic to the data model and capable of publishing objects to an IF-MAP server.<\/p>\n<p>The generator also produces a C++ library that can decode the IF-MAP messages and generate C++ objects; another library which is agnostic to the data-model can provide a subset of the graph to specific clients. It is used to determine the minimal subset of the configuration graph that should be made available to the contrail vrouter agents.<\/p>\n<p>These tools are quite independent of the XSD schema that one wishes to feed to IF-MAP. They can be useful to anyone else that is tired of arguing how the hierarchy should look like in a traditional configuration file approach in a world that is increasingly interconnected.<\/p>\n<p style=\"padding-left: 510px;\"><i>&#8211; Pedro Marques<\/i><\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I had the privilege to be part of the team that built Juniper\u2019s EX switches; it was a fun experience as building something from scratch typically is. One episode I&#8230;<\/p>\n","protected":false},"author":458,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4,5,1],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Configuration as a graph - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/configuration-as-a-graph\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Configuration as a graph - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"I had the privilege to be part of the team that built Juniper\u2019s EX switches; it was a fun experience as building something from scratch typically is. One episode I...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/configuration-as-a-graph\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2013-10-02T22:49:05+00:00\" \/>\n<meta name=\"author\" content=\"Pedro Marques\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/configuration-as-a-graph\/\",\"url\":\"https:\/\/tungsten.io\/configuration-as-a-graph\/\",\"name\":\"Configuration as a graph - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2013-10-02T22:49:05+00:00\",\"dateModified\":\"2013-10-02T22:49:05+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/4482c87f5bb06e7236ba1ff004df8def\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/configuration-as-a-graph\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/4482c87f5bb06e7236ba1ff004df8def\",\"name\":\"Pedro Marques\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/6e92702fd500d2259b81e6285c050e68?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/6e92702fd500d2259b81e6285c050e68?s=96&d=mm&r=pg\",\"caption\":\"Pedro Marques\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Configuration as a graph - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/configuration-as-a-graph\/","og_locale":"en_US","og_type":"article","og_title":"Configuration as a graph - Tungsten Fabric","og_description":"I had the privilege to be part of the team that built Juniper\u2019s EX switches; it was a fun experience as building something from scratch typically is. One episode I...","og_url":"https:\/\/tungsten.io\/configuration-as-a-graph\/","og_site_name":"Tungsten Fabric","article_published_time":"2013-10-02T22:49:05+00:00","author":"Pedro Marques","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/configuration-as-a-graph\/","url":"https:\/\/tungsten.io\/configuration-as-a-graph\/","name":"Configuration as a graph - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2013-10-02T22:49:05+00:00","dateModified":"2013-10-02T22:49:05+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/4482c87f5bb06e7236ba1ff004df8def"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/configuration-as-a-graph\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/4482c87f5bb06e7236ba1ff004df8def","name":"Pedro Marques","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/6e92702fd500d2259b81e6285c050e68?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/6e92702fd500d2259b81e6285c050e68?s=96&d=mm&r=pg","caption":"Pedro Marques"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/553"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/458"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=553"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/553\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=553"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=553"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=553"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}