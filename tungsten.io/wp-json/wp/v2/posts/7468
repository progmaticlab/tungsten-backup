{"id":7468,"date":"2017-04-17T09:33:18","date_gmt":"2017-04-17T16:33:18","guid":{"rendered":"http:\/\/www.opencontrail.org\/?p=7468"},"modified":"2017-04-17T09:33:18","modified_gmt":"2017-04-17T16:33:18","slug":"a-contrarian-viewpoint-on-container-networking","status":"publish","type":"post","link":"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/","title":{"rendered":"A Contrarian Viewpoint On Container Networking"},"content":{"rendered":"<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-7470\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2017\/04\/dockercon_2017_blogpost.png\" alt=\"\" width=\"582\" height=\"250\" data-id=\"7470\" \/><\/p>\n<p>With DockerCon in Austin happening this week, I\u2019m reminded of last year\u2019s DockerCon Seattle, and watching some announcements with utter fascination or utter disappointment. Let\u2019s see if we can\u2019t turn the disappointments into positives.<\/p>\n<p>The first disappointment has a recent happy ending. It was a broadly shared observation in Seattle, the media, and discussion forums: Docker was overstepping when they bundled in Swarm with the core of Docker Engine in 1.12. This led to the trial balloon that forking Docker was a potential solution towards a lighter-weight Docker that could serve in Mesos and Kubernetes too. Last September I covered this <a href=\"https:\/\/www.linkedin.com\/pulse\/meet-fockers-what-fork-james-kelly\" target=\"_blank\">in my blog<\/a> sparing little disdain over the idea of forking Docker Engine simply because it had become too monolithic. There are other good options, and I\u2019m happy to say Docker heeded the community\u2019s outcry and cleanly broke out a component of Docker Engine called containerd which is the crux of the container runtime. This gets back to the elegant Unix-tool inspired modularization and composition, and I\u2019m glad to see containerd and rkt have recently been accepted into the CNCF. Crisis #1 averted.<\/p>\n<p>My next disappointment was not so widely shared, and in fact it is still a problem at large today: the viewpoint on container networking. Let\u2019s have a look.<\/p>\n<h3><strong>IS CONTAINER NETWORKING SPECIAL?<\/strong><\/h3>\n<p>When it comes to containers, there\u2019s a massive outpour of innovation from both mature vendors and startups alike. When it comes to SDN there\u2019s no exception.<\/p>\n<p>Many of these solutions you can discount because, as I said <a href=\"https:\/\/www.linkedin.com\/pulse\/best-sdn-openstack-now-kubernetes-james-kelly\" target=\"_blank\">in my last blog<\/a>, as shiny and interesting as they may be on the surface or in the community, their simplicity is quickly discovered as a double-edged sword. In other words, they may be easy to get going and wrap your head around, but they have serious performance issues, security issues, scale issues, and \u201cexperiential cliffs\u201d to borrow a turn of phrase from the Kubernetes founders when they commented on the sometimes over-simplicity of many PaaS systems (iow. they hit a use case where the system just can\u2019t do that experience\/feature that is needed).<\/p>\n<h3><strong>BACK TO DOCKERCON SEATTLE\u2026<\/strong><\/h3>\n<p>Let\u2019s put aside the SDN startups that to various extents suffer from the over-simplicity or lack of soak and development time, leading to the issues above. The thing that really grinds my gears about last year\u2019s DockerCon can be boiled down to Docker, a powerful voice in the community, really advocating that container networking was making serious strides, when at the same time they were using the most primitive of statements (and solution) possible, introducing \u201cMulti-host networking\u201d<\/p>\n<p id=\"yui_3_17_2_1_1492446495186_899\">You may recall my social post\/poke at the photo of this slide with my sarcastic caption.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-7469\" src=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2017\/04\/dockercon_2017_blogpost_image2.png\" alt=\"\" width=\"750\" height=\"421\" data-id=\"7469\" \/><\/p>\n<p>Of course, Docker was talking about their overlay-based approach to networking that was launched as the (then) new default mode to enable networking in Swarm clusters. The problem is that most of the community are not SDN experts, and so they really don\u2019t know any better than to believe this is an aww!-worthy contribution. A few of us that have long-worked in networking were less impressed.<\/p>\n<p>Because of the attention that container projects get, Docker being the biggest, these kind of SDN solutions are still seen today by the wider community of users as good networking solutions to go with because they easily work in the very basic CaaS use cases that most users start playing with. Just because they work for your cluster today, however, doesn\u2019t make them a solid choice. In the future your netops team will ask about X, Y and Z (and yet more stuff down the road they won\u2019t have the foresight to see today). Also in the future you\u2019ll expand and mature your use cases and start to care about non-functional traits of the network which often happens too late in production or when problems arise. I totally get it. Networking isn\u2019t the first thing you want to think about in the cool new world of container stacks. It\u2019s down in the weeds. It\u2019s more exciting to contemplate the orchestration layer, and things we understand like our applications.<\/p>\n<p>On top of the fact that many of these new SDN players offer primitive solutions with hidden pitfalls down the road that you won\u2019t see until it\u2019s too late, another less pardonable nuisance is the fact that most of them are perpetrating the myth that container networking is somehow special. I\u2019ve heard this a lot in various verbiage over the ~7 years that SDN has arisen for cloud use cases. Just this week, I read a meetup description that started, \u201cContainers require a new approach to networking.\u201d Because of all the commotion in the container community with plenty of new SDN projects and companies having popped up, you may be duped into believing that, but it\u2019s completely false. These players have a vested interest, though, in making you see it that way.<\/p>\n<h3><strong>THE TRUTH ABOUT NETWORKING CONTAINERS<\/strong><\/h3>\n<p>The truth is that while workload connectivity to the network may change with containers (see CNM or CNI) or with the next new thing, the network itself doesn\u2019t need to change to address the new endpoint type. Where networks did need some work, however, is on the side of plugging into the orchestration systems. This meant that networks needed better programmability and then integration to connect-up workloads in lock-step with how the orchestration system created, deleted and moved workloads. This meant plugging into systems like vSphere, OpenStack, Kubernetes, etc. In dealing with that challenge, there were again two mindsets to making the network more programmable, automated, and agile: one camp created totally net-new solutions with entirely new protocols (OpenFlow, STT, VxLAN, VPP, etc.), and the other camp used existing protocols to build new more dynamic solutions that met the new needs.<\/p>\n<p>Today the first camp solutions are falling by the wayside, and the camp that built based on existing open standards and with interoperability in mind is clearly winning. <a href=\"http:\/\/www.opencontrail.org\/\" target=\"_blank\">OpenContrail<\/a> is the most successful of these solutions.<\/p>\n<p>The truth about networks is that they are pervasive and they connect everything. Interoperability is key. 1) Interoperability across networks: If you build a network that is an island of connectivity, it can\u2019t be successful. If you build a network that requires special\/new gateways, then it doesn\u2019t connect quickly and easily to other networks using existing standards, and it won\u2019t be successful. 2) Interoperability across endpoints connections: If you build a network that is brilliant at connecting only containers, even if it\u2019s interoperable with other networks, then you\u2019ve still created an island. It\u2019s an island of operational context because the ops team needs a different solution for connecting bare-metal nodes and virtual machines. 3) Interoperability across infrastructure: If you have an SDN solution that requires a lot from the underlay\/underlying infrastructure, it\u2019s a failure. We\u2019ve seen this with SDNs like NSX that required multicast in the underlay. We\u2019ve seen this with ACI that requires Cisco switches to work. We\u2019ve even seen great SDN solutions in the public cloud, but they\u2019re specific to AWS or GCP. If your SDN solution isn\u2019t portable anywhere, certainly to most places, then it\u2019s still doomed.<\/p>\n<h3><strong>IF YOU WANT ONE UNIFIED NETWORK, YOU NEED ONE SDN SOLUTION<\/strong><\/h3>\n<p>This aspect of interoperability and portability actually applies to many IT tools if you\u2019re really going to realize a hybrid cloud and streamline ops, but perhaps nowhere is it more important than in the network because of its inherently pervasive nature.<\/p>\n<p>If you\u2019re at DockerCon this week, you\u2019ll be happy to know that the best solution for container networking, OpenContrail, is also the best SDN for Kubernetes, Mesos, OpenStack, NFV, bare-metal node network automation, and VMware. While this is one SDN to rule and connect them all, and very feature rich in its 4th year of development, it\u2019s also never been more approachable, both commercially turn-key and in open source. You can deploy it on top of any public cloud or atop of private clouds with OpenStack or VMware, or equally easily on bare-metal CaaS, especially with Kubernetes, thanks to Helm.<\/p>\n<p>Please drop by and ask for an OpenContrail demo and <a href=\"https:\/\/www.facebook.com\/plugins\/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fphoto.php%3Ffbid%3D677962765593635%26set%3Da.156115871111663.33285.100001397528602%26type%3D3&amp;width=500\" target=\"_blank\">sticker<\/a>! for your laptop or phone at the Juniper Networks booth, and booths of partners of Juniper\u2019s that have Juniper Contrail Networking integrations: Red Hat, Mirantis, Canonical, and we\u2019re now happy to welcome Platform9 to the party too. We at Juniper will be showcasing a joint demo with Platform9 that you can read more about on the <a href=\"https:\/\/platform9.com\/blog\/sdn-kubernetes-opencontrail-platform9-bring-simple-secure-container-networking-solution-enterprises\/\" target=\"_blank\">Platform9 blog<\/a>.<\/p>\n<p>PS. If you\u2019re running your CaaS atop of OpenStack, then even more reason that you\u2019ll want to stop by and get a sneak peak of what you\u2019ll also hear more about at the upcoming Red Hat and OpenStack Summits in Boston.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>With DockerCon in Austin happening this week, I\u2019m reminded of last year\u2019s DockerCon Seattle, and watching some announcements with utter fascination or utter disappointment. Let\u2019s see if we can\u2019t turn&#8230;<\/p>\n","protected":false},"author":484,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[30,16,40,28],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>A Contrarian Viewpoint On Container Networking - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"A Contrarian Viewpoint On Container Networking - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"With DockerCon in Austin happening this week, I\u2019m reminded of last year\u2019s DockerCon Seattle, and watching some announcements with utter fascination or utter disappointment. Let\u2019s see if we can\u2019t turn...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2017-04-17T16:33:18+00:00\" \/>\n<meta property=\"og:image\" content=\"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2017\/04\/dockercon_2017_blogpost.png\" \/>\n<meta name=\"author\" content=\"James Kelly\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/\",\"url\":\"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/\",\"name\":\"A Contrarian Viewpoint On Container Networking - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2017-04-17T16:33:18+00:00\",\"dateModified\":\"2017-04-17T16:33:18+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/8c323ac79e67fd8b0b6c77dd82df0030\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/8c323ac79e67fd8b0b6c77dd82df0030\",\"name\":\"James Kelly\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/69dcddda0d46307fc09706c1811c5c63?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/69dcddda0d46307fc09706c1811c5c63?s=96&d=mm&r=pg\",\"caption\":\"James Kelly\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"A Contrarian Viewpoint On Container Networking - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/","og_locale":"en_US","og_type":"article","og_title":"A Contrarian Viewpoint On Container Networking - Tungsten Fabric","og_description":"With DockerCon in Austin happening this week, I\u2019m reminded of last year\u2019s DockerCon Seattle, and watching some announcements with utter fascination or utter disappointment. Let\u2019s see if we can\u2019t turn...","og_url":"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/","og_site_name":"Tungsten Fabric","article_published_time":"2017-04-17T16:33:18+00:00","og_image":[{"url":"http:\/\/www.opencontrail.org\/wp-content\/uploads\/2017\/04\/dockercon_2017_blogpost.png"}],"author":"James Kelly","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/","url":"https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/","name":"A Contrarian Viewpoint On Container Networking - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2017-04-17T16:33:18+00:00","dateModified":"2017-04-17T16:33:18+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/8c323ac79e67fd8b0b6c77dd82df0030"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/a-contrarian-viewpoint-on-container-networking\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/8c323ac79e67fd8b0b6c77dd82df0030","name":"James Kelly","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/69dcddda0d46307fc09706c1811c5c63?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/69dcddda0d46307fc09706c1811c5c63?s=96&d=mm&r=pg","caption":"James Kelly"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/7468"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/484"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=7468"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/7468\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=7468"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=7468"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=7468"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}