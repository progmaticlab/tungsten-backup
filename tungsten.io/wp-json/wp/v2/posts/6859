{"id":6859,"date":"2015-11-17T13:37:32","date_gmt":"2015-11-17T21:37:32","guid":{"rendered":"http:\/\/www.opencontrail.org\/?p=6859"},"modified":"2015-11-17T13:37:32","modified_gmt":"2015-11-17T21:37:32","slug":"kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail","status":"publish","type":"post","link":"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/","title":{"rendered":"Kube-O-Contrail \u2013 get your hands dirty with Kubernetes and OpenContrail"},"content":{"rendered":"<p><em>This blog is\u00a0co-authored by <strong>Sanju Abraham<\/strong> and <strong>Aniket Daptari<\/strong> from Juniper Networks. <\/em><\/p>\n<p>The OpenContrail team participated in the recently concluded <a href=\"https:\/\/kubecon.io\/\">KubeCon 2015<\/a>. It was the inaugural conference for the Kubernetes ecosystem. At the conference, we helped the attendees with a hands-on\u00a0<a href=\"http:\/\/sched.co\/4Wc8\">workshop<\/a>.<\/p>\n<p>In the past we have demonstrated the integration of OpenContrail with OpenStack, CloudStack, VMware vCenter, IBM Cloud Orchestrator and some other orchestrators. With the growing acceptance of Containers as the compute vehicle of choice to deploy modern applications, the OpenContrail team extended the overlay virtual networking to Containers.<\/p>\n<p>As Kubernetes came along, groups of containers deployed together to implement a logical piece of functionality started being managed together as Pods and multiple Pods as Services.<\/p>\n<p>The OpenContrail team extended the same networking primitives and constructs to the Kubernetes entities like Pods and Services &#8211; providing not just security via isolation for Pods, and interconnecting them based on app tier interrelationships specified in the app deployment manifest, but also providing load balancing across the various Pods that implement a particular service behind the service\u2019s \u201cClusterIP\u201d.<\/p>\n<p>OpenContrail also creates the construct of Virtual Networks for every collection of Pods along with a CIDR block allocated for that Virtual Network. Then, as Pods are spawned, OpenContrail assigns an IP for every new Pod created.<\/p>\n<p>When entities like Webservers need to be accessed from across the internet and need to have a public facing IP address, OpenContrail also provides NATting in a fully distributed fashion.<\/p>\n<p>In summary, OpenContrail provides all the following functionalities in a fully distributed fashion:<\/p>\n<p>IPAM, DHCP, DNS, Load balancing, NAT and Firewalling.<\/p>\n<p>All the above sounds pretty cool and the next thing on anyone\u2019s mind is, \u201cFine, how do I see these in action for myself?\u201d<\/p>\n<p>In order to reap all the above benefits from OpenContrail, we have committed all the necessary OpenContrail code to Kubernetes mainline &#8211; well almost. Our <a href=\"https:\/\/github.com\/kubernetes\/kubernetes\/pull\/16682\">pull request<\/a> to merge our changes with Kubernetes mainline is open and we anticipate it getting approved within the next few weeks.<\/p>\n<p>What that allows is that whenever any one deploys Kubernetes:<\/p>\n<p>1) On baremetal servers in an on-prem private cloud,<br \/>\n2) On top of OpenStack perhaps using Murano in an on-prem private cloud,<br \/>\n3) On a public cloud like GCE,<br \/>\n4) Or a public cloud like AWS,<\/p>\n<p>All the OpenContrail goodness is right there along with Kubernetes. All that needs to be done to leverage the OpenContrail goodness is to set the value of an environment variable \u201cNETWORK_PROVIDER\u201d to \u201copencontrail\u201d before Kubernetes is installed.<\/p>\n<p>So let\u2019s go through the steps to first deploy Kubernetes in a public cloud, say GCE, that includes and enables OpenContrail, and then deploy a sample application and see what benefits OpenContrail brings along.<\/p>\n<p><strong>Step 1:<\/strong> Deploying Kubernetes in GCE along with OpenContrail.<\/p>\n<p>In order to do this, we will build Kubernetes and deploy it:<\/p>\n<p style=\"padding-left: 30px;\">a) git clone -b opencontrail-integration\u00a0<a href=\"https:\/\/github.com\/Juniper\/kubernetes\/kubernetes.git\">https:\/\/github.com\/Juniper\/kubernetes\/kubernetes.git<\/a><\/p>\n<p style=\"padding-left: 30px;\">b) ~\/build\/release.sh<\/p>\n<p style=\"padding-left: 30px;\">c)\u00a0export NETWORK_PROVIDER=opencontrail<\/p>\n<p style=\"padding-left: 30px;\">d) .\/cluster\/kube-up.sh<\/p>\n<p>&#8230;Starting cluster using provider: gce<br \/>\n&#8230;<\/p>\n<p>Kubernetes cluster is running.\u00a0 The master is running at:<\/p>\n<p><a href=\"https:\/\/104.197.128.44\/\">https:\/\/104.197.128.44<\/a><\/p>\n<p>The user name and password to use is located in \/Users\/adaptari\/.kube\/config.<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">\n... calling validate-cluster\nFound 3 node(s).\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 LABELS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 AGE\nkube-oc-2-master\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<a href=\"http:\/\/kubernetes.io\/hostname=kube-oc-2-master\">kubernetes.io\/hostname=kube-oc-2-master<\/a>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ready,SchedulingDisabled\u00a0\u00a0 1m\nkube-oc-2-minion-59ws\u00a0\u00a0\u00a0<a href=\"http:\/\/kubernetes.io\/hostname=kube-oc-2-minion-59ws\">kubernetes.io\/hostname=kube-oc-2-minion-59ws<\/a>\u00a0\u00a0 Ready\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1m\nkube-oc-2-minion-htl8\u00a0\u00a0\u00a0<a href=\"http:\/\/kubernetes.io\/hostname=kube-oc-2-minion-htl8\">kubernetes.io\/hostname=kube-oc-2-minion-htl8<\/a>\u00a0\u00a0 Ready\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1m\nValidate output:\nNAME\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 STATUS\u00a0\u00a0\u00a0 MESSAGE\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ERROR\ncontroller-manager\u00a0\u00a0 Healthy\u00a0\u00a0 ok\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 nil\nscheduler\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Healthy\u00a0\u00a0 ok\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 nil\netcd-0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Healthy\u00a0\u00a0 {\"health\": \"true\"}\u00a0\u00a0 nil\netcd-1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Healthy\u00a0\u00a0 {\"health\": \"true\"}\u00a0\u00a0 nil\nCluster validation succeeded\nDone, listing cluster services:\n\n\u00a0\n\nKubernetes master is running at\u00a0<a href=\"https:\/\/104.197.128.44\/\">https:\/\/104.197.128.44<\/a>\n\nGLBCDefaultBackend is running at\u00a0<a href=\"https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/default-http-backend\">https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/default-http-backend<\/a>\nHeapster is running at\u00a0<a href=\"https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/heapster\">https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/heapster<\/a>\nKubeDNS is running at\u00a0<a href=\"https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/kube-dns\">https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/kube-dns<\/a>\nKubeUI is running at\u00a0<a href=\"https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/kube-ui\">https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/kube-ui<\/a>\nGrafana is running at\u00a0<a href=\"https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/monitoring-grafana\">https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/monitoring-grafana<\/a>\nInfluxDB is running at\u00a0<a href=\"https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/monitoring-influxdb\">https:\/\/104.197.128.44\/api\/v1\/proxy\/namespaces\/kube-system\/services\/monitoring-influxdb<\/a><\/span><\/pre>\n<p style=\"padding-left: 30px;\">d) To view the Contrail components, you can issue:<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">docker ps | grep contrail | grep -v pause<\/span><\/pre>\n<p><strong>Step 2:<\/strong> Now that we have Kubernetes running with OpenContrail, let\u2019s find and prepare an app.<\/p>\n<p>The main forte of OpenContrail lies in abstraction. Abstraction is necessary for the speed and agility that developers care most about. This abstraction is accomplished by letting developers specify app tier inter-relationships in the form of annotations in the app deployment manifests. OpenContrail controller will then infer the policy requirements based on the inter-relationships specified in the app manifests and program corresponding security policies into the vRouters for fully distributed enforcement.<\/p>\n<p>Therefore, the existing app manifests of applications need to be patched with the annotations.<\/p>\n<p>So, patch the existing app, guestbook-go.<\/p>\n<p><a href=\"https:\/\/github.com\/Juniper\/contrail-kubernetes\/blob\/vrouter-manifest\/cluster\/patch_guest_book\">https:\/\/github.com\/Juniper\/contrail-kubernetes\/blob\/vrouter-manifest\/cluster\/patch_guest_book<\/a><br \/>\nThe patch above introduces the labels \u201cname\u201d and \u201cuses\u201d that help specify the app tier inter-relationships.<br \/>\nTo apply the patch,<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">git\u00a0apply \u2013stat patch\ngit\u00a0apply \u2013check patch\ngit\u00a0apply patch<\/span><\/pre>\n<p><strong>Step 3:<\/strong> Now that the app is ready, let\u2019s go ahead and deploy it:<\/p>\n<pre><span style=\"font-family: 'courier new', courier;\">kubectl\u00a0create -f guestbook-go\/redis-master-controller.json\nkubectl\u00a0create -f guestbook-go\/redis-master-service.json\nkubectl\u00a0create -f guestbook-go\/redis-slave-controller.json\nkubectl\u00a0create -f guestbook-go\/redis-slave-service.json\nkubectl\u00a0create -f guestbook-go\/guestbook-controller.json\nkubectl\u00a0create -f\u00a0guestbook-go\/guestbook-service.json<\/span><\/pre>\n<p>Notice here that the way Kubernetes was installed or the way apps are deployed has not changed one bit. The only thing that has changed is the introduction of an environment variable and the introduction of annotations in the form of labels &#8211; \u201cname\u201d and \u201cuses\u201d.<\/p>\n<p>Finally, to view the replication controllers and service pods created from the above commands, use:<\/p>\n<p>kubectl get rc<br \/>\nkubectl get pods<\/p>\n<p><strong>Step 4:<\/strong> Establish ssh tunnel into the public IP allocated to the guestbook webserver from localhost. Then point browser to <a href=\"http:\/\/localhost:3000\">http:\/\/localhost:3000<\/a> (or port used in port forwarding).<\/p>\n<p>This completes the hands-on exercise for OpenContrail with Kubernetes.<\/p>\n<p>In the next part of this blog, we will continue the ride deeper into OpenContrail and look closely at what components OpenContrail has introduced and what benefits those components provide.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>This blog is\u00a0co-authored by Sanju Abraham and Aniket Daptari from Juniper Networks. The OpenContrail team participated in the recently concluded KubeCon 2015. It was the inaugural conference for the Kubernetes&#8230;<\/p>\n","protected":false},"author":483,"featured_media":0,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[16,17,11],"tags":[],"acf":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Kube-O-Contrail \u2013 get your hands dirty with Kubernetes and OpenContrail - Tungsten Fabric<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Kube-O-Contrail \u2013 get your hands dirty with Kubernetes and OpenContrail - Tungsten Fabric\" \/>\n<meta property=\"og:description\" content=\"This blog is\u00a0co-authored by Sanju Abraham and Aniket Daptari from Juniper Networks. The OpenContrail team participated in the recently concluded KubeCon 2015. It was the inaugural conference for the Kubernetes...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/\" \/>\n<meta property=\"og:site_name\" content=\"Tungsten Fabric\" \/>\n<meta property=\"article:published_time\" content=\"2015-11-17T21:37:32+00:00\" \/>\n<meta name=\"author\" content=\"Aniket Daptari\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/\",\"url\":\"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/\",\"name\":\"Kube-O-Contrail \u2013 get your hands dirty with Kubernetes and OpenContrail - Tungsten Fabric\",\"isPartOf\":{\"@id\":\"https:\/\/tungsten.io\/#website\"},\"datePublished\":\"2015-11-17T21:37:32+00:00\",\"dateModified\":\"2015-11-17T21:37:32+00:00\",\"author\":{\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tungsten.io\/#website\",\"url\":\"https:\/\/tungsten.io\/\",\"name\":\"Tungsten Fabric\",\"description\":\"multicloud multistack SDN\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tungsten.io\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648\",\"name\":\"Aniket Daptari\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tungsten.io\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg\",\"caption\":\"Aniket Daptari\"},\"url\":\"https:\/\/tungsten.io\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Kube-O-Contrail \u2013 get your hands dirty with Kubernetes and OpenContrail - Tungsten Fabric","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/","og_locale":"en_US","og_type":"article","og_title":"Kube-O-Contrail \u2013 get your hands dirty with Kubernetes and OpenContrail - Tungsten Fabric","og_description":"This blog is\u00a0co-authored by Sanju Abraham and Aniket Daptari from Juniper Networks. The OpenContrail team participated in the recently concluded KubeCon 2015. It was the inaugural conference for the Kubernetes...","og_url":"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/","og_site_name":"Tungsten Fabric","article_published_time":"2015-11-17T21:37:32+00:00","author":"Aniket Daptari","twitter_card":"summary_large_image","schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/","url":"https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/","name":"Kube-O-Contrail \u2013 get your hands dirty with Kubernetes and OpenContrail - Tungsten Fabric","isPartOf":{"@id":"https:\/\/tungsten.io\/#website"},"datePublished":"2015-11-17T21:37:32+00:00","dateModified":"2015-11-17T21:37:32+00:00","author":{"@id":"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tungsten.io\/kube-o-contrail-get-your-hands-dirty-with-kubernetes-and-opencontrail\/"]}]},{"@type":"WebSite","@id":"https:\/\/tungsten.io\/#website","url":"https:\/\/tungsten.io\/","name":"Tungsten Fabric","description":"multicloud multistack SDN","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tungsten.io\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/tungsten.io\/#\/schema\/person\/18e8f4e76148c29004945de2b0480648","name":"Aniket Daptari","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tungsten.io\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/6dd30275f903c0439281ffc40a6966fb?s=96&d=mm&r=pg","caption":"Aniket Daptari"},"url":"https:\/\/tungsten.io"}]}},"_links":{"self":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/6859"}],"collection":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/users\/483"}],"replies":[{"embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/comments?post=6859"}],"version-history":[{"count":0,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/posts\/6859\/revisions"}],"wp:attachment":[{"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/media?parent=6859"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/categories?post=6859"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/tungsten.io\/wp-json\/wp\/v2\/tags?post=6859"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}